2025/08/28 13:38:00 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.9.20 (main, Oct  3 2024, 07:27:41) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1
    GPU 0: NVIDIA GeForce RTX 3090
    CUDA_HOME: None
    GCC: gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0
    PyTorch: 2.1.1+cu118
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.1+cu118
    OpenCV: 4.10.0
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1
    deterministic: False
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2025/08/28 13:38:00 - mmengine - INFO - Config:
activation_checkpointing = [
    'vision_encoder.layers.1',
    'vision_encoder.layers.2',
    'vision_encoder.layers.3',
    'text_encoder.encoder.layer.1',
    'text_encoder.encoder.layer.2',
    'text_encoder.encoder.layer.3',
    'text_encoder.encoder.layer.4',
    'text_encoder.encoder.layer.5',
    'text_encoder.encoder.layer.6',
    'text_encoder.encoder.layer.7',
    'text_encoder.encoder.layer.8',
    'text_encoder.encoder.layer.9',
    'text_encoder.encoder.layer.10',
    'text_encoder.encoder.layer.11',
]
default_hooks = dict(
    checkpoint=dict(by_epoch=True, interval=1, type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(enable=False, type='VisualizationHook'))
default_scope = 'mmpretrain'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
model = dict(
    bbox_head=dict(hidden_size=768, type='XVLM_BOXHead'),
    fast_match=True,
    init_cfg=dict(
        checkpoint='pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth',
        type='Pretrained'),
    itc_head=dict(
        alpha=0.4,
        embed_dim=256,
        queue_size=57600,
        type='XVLM_ITC_MCD',
        use_distill=True),
    itm_head=dict(
        cal_acc=True, hidden_size=768, type='XVLM_ITMHead', with_pooler=False),
    max_tokens=90,
    text_encoder=dict(
        med_config=dict(
            add_cross_attention=True,
            architectures=[
                'BertForMaskedLM',
            ],
            attention_probs_dropout_prob=0.1,
            encoder_width=1024,
            fusion_layer=6,
            hidden_act='gelu',
            hidden_dropout_prob=0.1,
            hidden_size=768,
            initializer_range=0.02,
            intermediate_size=3072,
            layer_norm_eps=1e-12,
            max_position_embeddings=512,
            model_type='bert',
            num_attention_heads=12,
            num_hidden_layers=12,
            pad_token_id=0,
            type_vocab_size=2,
            vocab_size=30522),
        type='XVLM_XBert'),
    text_proj=dict(in_features=768, out_features=256, type='Linear'),
    tokenizer_path='pretrain/bert-base-uncased',
    topk=64,
    train_max_words=90,
    type='XVLMRetrieval_hccm',
    val_max_words=90,
    vision_encoder=dict(
        ape=False,
        depths=[
            2,
            2,
            18,
            2,
        ],
        drop_path_rate=0.1,
        drop_rate=0.0,
        embed_dim=128,
        img_size=384,
        in_chans=3,
        mlp_ratio=4.0,
        num_heads=[
            4,
            8,
            16,
            32,
        ],
        patch_norm=True,
        patch_size=4,
        qkv_bias=True,
        type='XVLM_SwinTransformer',
        use_checkpoint=False,
        window_size=12),
    vision_proj=dict(in_features=1024, out_features=256, type='Linear'),
    w_itc=0.25,
    w_itc_entis=0.25,
    w_itm=1,
    w_itm_entis=0.5)
optim_wrapper = dict(
    optimizer=dict(lr=3e-05, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(bias_decay_mult=0.0, norm_decay_mult=0.0),
    type='OptimWrapper')
param_scheduler = [
    dict(
        by_epoch=False,
        end=1000,
        end_factor=1,
        start_factor=0.001,
        type='LinearLR'),
    dict(
        begin=1000,
        by_epoch=False,
        end_factor=1e-10,
        start_factor=1,
        type='LinearLR'),
]
rand_increasing_policies = [
    dict(type='AutoContrast'),
    dict(type='Equalize'),
    dict(
        magnitude_key='magnitude',
        magnitude_range=(
            0.1,
            1.8,
        ),
        type='Brightness'),
    dict(
        magnitude_key='magnitude',
        magnitude_range=(
            0.1,
            1.8,
        ),
        type='Sharpness'),
]
randomness = dict(deterministic=False, seed=1)
resume = False
test_cfg = dict(
    fast_datainfo=True,
    fp16=True,
    i2t=True,
    load_cpu=True,
    type='HDCRetrievalTestLoop')
test_dataloader = dict(
    batch_size=64,
    collate_fn=dict(type='default_collate'),
    dataset=dict(
        ann_file='test_951_version.json',
        data_prefix=dict(img_path='images'),
        data_root='/home/rh/Files/MS/datasets/GeoText1652_Dataset',
        pipeline=[
            dict(imdecode_backend='pillow', type='LoadImageFromFile'),
            dict(
                backend='pillow',
                interpolation='bicubic',
                scale=(
                    384,
                    384,
                ),
                type='Resize'),
            dict(keys='text', type='CleanCaption'),
            dict(
                algorithm_keys=[
                    'text',
                    'gt_text_id',
                    'gt_image_id',
                ],
                meta_keys=[
                    'image_id',
                ],
                type='PackInputs'),
        ],
        test_mode=True,
        type='GeoText1652Dataset'),
    num_workers=16,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(subsample_type='sequential', type='SequentialSampler'))
test_evaluator = dict(
    topk=(
        1,
        5,
        10,
    ), type='RetrievalRecall')
test_pipeline = [
    dict(imdecode_backend='pillow', type='LoadImageFromFile'),
    dict(
        backend='pillow',
        interpolation='bicubic',
        scale=(
            384,
            384,
        ),
        type='Resize'),
    dict(keys='text', type='CleanCaption'),
    dict(
        algorithm_keys=[
            'text',
            'gt_text_id',
            'gt_image_id',
        ],
        meta_keys=[
            'image_id',
        ],
        type='PackInputs'),
]
train_cfg = dict(max_epochs=6, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_size=16,
    collate_fn=dict(type='default_collate'),
    dataset=dict(
        ann_file='train.json',
        data_prefix=dict(img_path='images'),
        data_root='/home/rh/Files/MS/datasets/GeoText1652_Dataset',
        pipeline=[
            dict(imdecode_backend='pillow', type='LoadImageFromFile'),
            dict(
                backend='pillow',
                interpolation='bicubic',
                scale=(
                    384,
                    384,
                ),
                type='Resize'),
            dict(
                magnitude_level=7,
                num_policies=2,
                policies=[
                    dict(type='AutoContrast'),
                    dict(type='Equalize'),
                    dict(
                        magnitude_key='magnitude',
                        magnitude_range=(
                            0.1,
                            1.8,
                        ),
                        type='Brightness'),
                    dict(
                        magnitude_key='magnitude',
                        magnitude_range=(
                            0.1,
                            1.8,
                        ),
                        type='Sharpness'),
                ],
                type='RandAugment'),
            dict(keys='text', type='CleanCaption'),
            dict(
                algorithm_keys=[
                    'text',
                    'is_matched',
                    'sentences',
                    'bboxes',
                ],
                meta_keys=[
                    'image_id',
                    'building_id',
                ],
                type='PackInputs'),
        ],
        test_mode=False,
        type='GeoText1652Dataset'),
    drop_last=True,
    num_workers=16,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(imdecode_backend='pillow', type='LoadImageFromFile'),
    dict(
        backend='pillow',
        interpolation='bicubic',
        scale=(
            384,
            384,
        ),
        type='Resize'),
    dict(
        magnitude_level=7,
        num_policies=2,
        policies=[
            dict(type='AutoContrast'),
            dict(type='Equalize'),
            dict(
                magnitude_key='magnitude',
                magnitude_range=(
                    0.1,
                    1.8,
                ),
                type='Brightness'),
            dict(
                magnitude_key='magnitude',
                magnitude_range=(
                    0.1,
                    1.8,
                ),
                type='Sharpness'),
        ],
        type='RandAugment'),
    dict(keys='text', type='CleanCaption'),
    dict(
        algorithm_keys=[
            'text',
            'is_matched',
            'sentences',
            'bboxes',
        ],
        meta_keys=[
            'image_id',
            'building_id',
        ],
        type='PackInputs'),
]
val_cfg = dict(
    fast_datainfo=True,
    fp16=True,
    i2t=False,
    load_cpu=True,
    type='HDCRetrievalValLoop')
val_dataloader = dict(
    batch_size=64,
    collate_fn=dict(type='default_collate'),
    dataset=dict(
        ann_file='test_951_version.json',
        data_prefix=dict(img_path='images'),
        data_root='/home/rh/Files/MS/datasets/GeoText1652_Dataset',
        pipeline=[
            dict(imdecode_backend='pillow', type='LoadImageFromFile'),
            dict(
                backend='pillow',
                interpolation='bicubic',
                scale=(
                    384,
                    384,
                ),
                type='Resize'),
            dict(keys='text', type='CleanCaption'),
            dict(
                algorithm_keys=[
                    'text',
                    'gt_text_id',
                    'gt_image_id',
                ],
                meta_keys=[
                    'image_id',
                ],
                type='PackInputs'),
        ],
        test_mode=True,
        type='GeoText1652Dataset'),
    num_workers=16,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(subsample_type='sequential', type='SequentialSampler'))
val_evaluator = dict(
    topk=(
        1,
        5,
        10,
    ), type='RetrievalRecall')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    type='UniversalVisualizer', vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = './work_dirs/xvlm_1xb24_hccm'

2025/08/28 13:38:03 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2025/08/28 13:38:03 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.patch_embed.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.patch_embed.norm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.patch_embed.norm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.0.blocks.0.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.0.blocks.0.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.0.blocks.0.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.0.blocks.0.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.0.blocks.0.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.0.blocks.0.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.0.blocks.0.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.0.blocks.0.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.0.blocks.1.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.0.blocks.1.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.0.blocks.1.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.0.blocks.1.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.0.blocks.1.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.0.blocks.1.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.0.blocks.1.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.0.blocks.1.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.0.downsample.norm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.0.downsample.norm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.1.blocks.0.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.1.blocks.0.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.1.blocks.0.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.1.blocks.0.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.1.blocks.0.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.1.blocks.0.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.1.blocks.0.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.1.blocks.0.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.1.blocks.1.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.1.blocks.1.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.1.blocks.1.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.1.blocks.1.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.1.blocks.1.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.1.blocks.1.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.1.blocks.1.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.1.blocks.1.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.1.downsample.norm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.1.downsample.norm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.0.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.0.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.0.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.0.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.0.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.0.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.0.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.0.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.1.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.1.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.1.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.1.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.1.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.1.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.1.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.1.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.2.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.2.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.2.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.2.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.2.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.2.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.2.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.2.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.3.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.3.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.3.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.3.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.3.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.3.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.3.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.3.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.4.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.4.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.4.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.4.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.4.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.4.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.4.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.4.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.5.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.5.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.5.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.5.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.5.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.5.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.5.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.5.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.6.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.6.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.6.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.6.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.6.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.6.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.6.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.6.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.7.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.7.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.7.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.7.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.7.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.7.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.7.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.7.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.8.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.8.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.8.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.8.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.8.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.8.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.8.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.8.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.9.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.9.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.9.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.9.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.9.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.9.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.9.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.9.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.10.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.10.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.10.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.10.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.10.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.10.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.10.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.10.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.11.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.11.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.11.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.11.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.11.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.11.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.11.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.11.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.12.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.12.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.12.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.12.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.12.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.12.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.12.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.12.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.13.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.13.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.13.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.13.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.13.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.13.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.13.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.13.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.14.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.14.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.14.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.14.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.14.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.14.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.14.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.14.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.15.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.15.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.15.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.15.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.15.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.15.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.15.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.15.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.16.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.16.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.16.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.16.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.16.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.16.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.16.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.16.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.17.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.17.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.17.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.17.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.17.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.17.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.17.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.blocks.17.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.downsample.norm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.2.downsample.norm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.3.blocks.0.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.3.blocks.0.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.3.blocks.0.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.3.blocks.0.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.3.blocks.0.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.3.blocks.0.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.3.blocks.0.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.3.blocks.0.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.3.blocks.1.norm1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.3.blocks.1.norm1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.3.blocks.1.attn.qkv.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.3.blocks.1.attn.proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.3.blocks.1.norm2.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.3.blocks.1.norm2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.3.blocks.1.mlp.fc1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.layers.3.blocks.1.mlp.fc2.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.norm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_encoder.norm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.embeddings.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.embeddings.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.0.attention.self.query.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.0.attention.self.key.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.0.attention.self.value.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.0.attention.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.0.attention.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.0.attention.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.0.intermediate.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.0.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.0.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.0.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.1.attention.self.query.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.1.attention.self.key.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.1.attention.self.value.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.1.attention.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.1.attention.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.1.attention.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.1.intermediate.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.1.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.1.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.1.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.2.attention.self.query.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.2.attention.self.key.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.2.attention.self.value.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.2.attention.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.2.attention.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.2.attention.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.2.intermediate.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.2.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.2.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.2.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.3.attention.self.query.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.3.attention.self.key.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.3.attention.self.value.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.3.attention.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.3.attention.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.3.attention.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.3.intermediate.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.3.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.3.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.3.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.4.attention.self.query.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.4.attention.self.key.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.4.attention.self.value.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.4.attention.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.4.attention.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.4.attention.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.4.intermediate.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.4.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.4.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.4.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.5.attention.self.query.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.5.attention.self.key.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.5.attention.self.value.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.5.attention.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.5.attention.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.5.attention.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.5.intermediate.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.5.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.5.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.5.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.6.attention.self.query.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.6.attention.self.key.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.6.attention.self.value.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.6.attention.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.6.attention.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.6.attention.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.6.crossattention.self.query.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.6.crossattention.self.key.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.6.crossattention.self.value.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.6.crossattention.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.6.crossattention.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.6.crossattention.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.6.intermediate.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.6.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.6.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.6.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.7.attention.self.query.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.7.attention.self.key.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.7.attention.self.value.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.7.attention.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.7.attention.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.7.attention.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.7.crossattention.self.query.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.7.crossattention.self.key.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.7.crossattention.self.value.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.7.crossattention.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.7.crossattention.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.7.crossattention.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.7.intermediate.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.7.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.7.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.7.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.8.attention.self.query.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.8.attention.self.key.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.8.attention.self.value.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.8.attention.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.8.attention.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.8.attention.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.8.crossattention.self.query.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.8.crossattention.self.key.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.8.crossattention.self.value.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.8.crossattention.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.8.crossattention.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.8.crossattention.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.8.intermediate.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.8.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.8.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.8.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.9.attention.self.query.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.9.attention.self.key.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.9.attention.self.value.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.9.attention.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.9.attention.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.9.attention.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.9.crossattention.self.query.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.9.crossattention.self.key.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.9.crossattention.self.value.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.9.crossattention.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.9.crossattention.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.9.crossattention.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.9.intermediate.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.9.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.9.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.9.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.10.attention.self.query.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.10.attention.self.key.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.10.attention.self.value.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.10.attention.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.10.attention.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.10.attention.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.10.crossattention.self.query.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.10.crossattention.self.key.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.10.crossattention.self.value.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.10.crossattention.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.10.crossattention.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.10.crossattention.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.10.intermediate.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.10.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.10.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.10.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.11.attention.self.query.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.11.attention.self.key.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.11.attention.self.value.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.11.attention.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.11.attention.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.11.attention.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.11.crossattention.self.query.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.11.crossattention.self.key.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.11.crossattention.self.value.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.11.crossattention.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.11.crossattention.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.11.crossattention.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.11.intermediate.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.11.output.dense.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.11.output.LayerNorm.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_encoder.encoder.layer.11.output.LayerNorm.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- vision_proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- text_proj.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- itm_head.fc.0.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- itm_head.fc.1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- itm_head.fc.1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- itm_head.fc.3.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- bbox_head.fc.0.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- bbox_head.fc.1.weight:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- bbox_head.fc.1.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - INFO - paramwise_options -- bbox_head.fc.3.bias:weight_decay=0.0
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.patch_embed.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.patch_embed.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.patch_embed.norm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.patch_embed.norm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.0.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.0.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.0.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.0.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.0.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.0.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.0.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.0.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.0.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.0.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.0.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.0.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.0.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.1.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.1.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.1.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.1.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.1.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.1.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.1.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.1.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.1.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.1.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.1.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.1.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.blocks.1.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.downsample.reduction.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.downsample.norm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.0.downsample.norm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.0.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.0.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.0.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.0.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.0.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.0.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.0.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.0.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.0.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.0.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.0.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.0.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.0.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.1.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.1.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.1.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.1.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.1.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.1.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.1.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.1.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.1.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.1.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.1.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.1.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.blocks.1.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.downsample.reduction.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.downsample.norm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.1.downsample.norm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.0.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.0.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.0.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.0.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.0.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.0.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.0.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.0.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.0.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.0.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.0.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.0.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.0.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.1.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.1.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.1.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.1.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.1.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.1.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.1.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.1.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.1.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.1.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.1.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.1.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.1.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.2.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.2.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.2.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.2.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.2.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.2.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.2.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.2.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.2.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.2.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.2.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.2.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.2.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.3.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.3.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.3.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.3.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.3.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.3.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.3.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.3.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.3.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.3.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.3.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.3.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.3.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.4.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.4.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.4.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.4.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.4.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.4.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.4.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.4.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.4.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.4.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.4.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.4.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.4.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.5.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.5.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.5.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.5.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.5.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.5.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.5.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.5.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.5.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.5.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.5.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.5.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.5.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.6.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.6.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.6.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.6.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.6.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.6.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.6.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.6.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.6.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.6.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.6.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.6.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.6.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.7.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.7.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.7.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.7.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.7.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.7.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.7.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.7.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.7.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.7.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.7.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.7.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.7.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.8.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.8.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.8.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.8.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.8.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.8.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.8.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.8.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.8.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.8.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.8.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.8.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.8.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.9.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.9.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.9.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.9.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.9.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.9.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.9.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.9.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.9.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.9.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.9.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.9.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.9.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.10.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.10.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.10.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.10.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.10.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.10.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.10.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.10.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.10.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.10.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.10.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.10.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.10.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.11.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.11.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.11.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.11.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.11.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.11.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.11.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.11.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.11.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.11.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.11.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.11.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.11.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.12.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.12.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.12.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.12.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.12.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.12.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.12.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.12.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.12.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.12.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.12.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.12.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.12.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.13.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.13.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.13.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.13.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.13.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.13.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.13.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.13.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.13.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.13.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.13.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.13.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.13.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.14.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.14.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.14.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.14.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.14.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.14.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.14.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.14.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.14.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.14.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.14.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.14.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.14.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.15.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.15.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.15.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.15.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.15.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.15.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.15.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.15.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.15.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.15.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.15.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.15.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.15.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.16.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.16.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.16.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.16.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.16.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.16.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.16.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.16.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.16.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.16.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.16.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.16.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.16.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.17.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.17.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.17.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.17.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.17.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.17.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.17.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.17.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.17.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.17.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.17.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.17.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.blocks.17.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.downsample.reduction.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.downsample.norm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.2.downsample.norm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.0.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.0.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.0.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.0.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.0.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.0.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.0.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.0.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.0.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.0.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.0.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.0.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.0.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.1.norm1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.1.norm1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.1.attn.relative_position_bias_table is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.1.attn.qkv.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.1.attn.qkv.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.1.attn.proj.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.1.attn.proj.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.1.norm2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.1.norm2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.1.mlp.fc1.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.1.mlp.fc1.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.1.mlp.fc2.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.layers.3.blocks.1.mlp.fc2.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.norm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_encoder_m.norm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.embeddings.word_embeddings.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.embeddings.position_embeddings.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.embeddings.token_type_embeddings.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.embeddings.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.embeddings.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.0.attention.self.query.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.0.attention.self.query.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.0.attention.self.key.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.0.attention.self.key.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.0.attention.self.value.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.0.attention.self.value.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.0.attention.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.0.attention.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.0.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.0.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.0.intermediate.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.0.intermediate.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.0.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.0.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.0.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.0.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.1.attention.self.query.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.1.attention.self.query.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.1.attention.self.key.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.1.attention.self.key.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.1.attention.self.value.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.1.attention.self.value.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.1.attention.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.1.attention.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.1.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.1.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.1.intermediate.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.1.intermediate.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.1.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.1.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.1.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.1.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.2.attention.self.query.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.2.attention.self.query.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.2.attention.self.key.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.2.attention.self.key.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.2.attention.self.value.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.2.attention.self.value.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.2.attention.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.2.attention.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.2.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.2.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.2.intermediate.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.2.intermediate.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.2.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.2.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.2.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.2.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.3.attention.self.query.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.3.attention.self.query.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.3.attention.self.key.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.3.attention.self.key.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.3.attention.self.value.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.3.attention.self.value.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.3.attention.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.3.attention.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.3.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.3.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.3.intermediate.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.3.intermediate.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.3.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.3.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.3.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.3.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.4.attention.self.query.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.4.attention.self.query.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.4.attention.self.key.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.4.attention.self.key.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.4.attention.self.value.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.4.attention.self.value.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.4.attention.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.4.attention.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.4.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.4.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.4.intermediate.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.4.intermediate.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.4.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.4.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.4.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.4.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.5.attention.self.query.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.5.attention.self.query.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.5.attention.self.key.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.5.attention.self.key.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.5.attention.self.value.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.5.attention.self.value.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.5.attention.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.5.attention.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.5.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.5.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.5.intermediate.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.5.intermediate.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.5.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.5.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.5.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.5.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.attention.self.query.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.attention.self.query.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.attention.self.key.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.attention.self.key.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.attention.self.value.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.attention.self.value.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.attention.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.attention.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.crossattention.self.query.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.crossattention.self.query.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.crossattention.self.key.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.crossattention.self.key.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.crossattention.self.value.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.crossattention.self.value.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.crossattention.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.crossattention.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.crossattention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.crossattention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.intermediate.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.intermediate.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.6.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.attention.self.query.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.attention.self.query.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.attention.self.key.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.attention.self.key.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.attention.self.value.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.attention.self.value.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.attention.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.attention.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.crossattention.self.query.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.crossattention.self.query.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.crossattention.self.key.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.crossattention.self.key.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.crossattention.self.value.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.crossattention.self.value.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.crossattention.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.crossattention.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.crossattention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.crossattention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.intermediate.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.intermediate.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.7.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.attention.self.query.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.attention.self.query.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.attention.self.key.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.attention.self.key.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.attention.self.value.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.attention.self.value.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.attention.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.attention.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.crossattention.self.query.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.crossattention.self.query.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.crossattention.self.key.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.crossattention.self.key.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.crossattention.self.value.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.crossattention.self.value.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.crossattention.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.crossattention.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.crossattention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.crossattention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.intermediate.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.intermediate.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.8.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.attention.self.query.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.attention.self.query.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.attention.self.key.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.attention.self.key.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.attention.self.value.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.attention.self.value.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.attention.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.attention.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.crossattention.self.query.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.crossattention.self.query.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.crossattention.self.key.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.crossattention.self.key.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.crossattention.self.value.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.crossattention.self.value.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.crossattention.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.crossattention.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.crossattention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.crossattention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.intermediate.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.intermediate.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.9.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.attention.self.query.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.attention.self.query.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.attention.self.key.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.attention.self.key.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.attention.self.value.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.attention.self.value.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.attention.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.attention.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.crossattention.self.query.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.crossattention.self.query.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.crossattention.self.key.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.crossattention.self.key.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.crossattention.self.value.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.crossattention.self.value.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.crossattention.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.crossattention.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.crossattention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.crossattention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.intermediate.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.intermediate.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.10.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.attention.self.query.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.attention.self.query.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.attention.self.key.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.attention.self.key.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.attention.self.value.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.attention.self.value.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.attention.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.attention.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.attention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.attention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.crossattention.self.query.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.crossattention.self.query.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.crossattention.self.key.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.crossattention.self.key.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.crossattention.self.value.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.crossattention.self.value.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.crossattention.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.crossattention.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.crossattention.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.crossattention.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.intermediate.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.intermediate.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.output.dense.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.output.dense.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.output.LayerNorm.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_encoder_m.encoder.layer.11.output.LayerNorm.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_proj_m.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - vision_proj_m.bias is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_proj_m.weight is skipped since its requires_grad=False
2025/08/28 13:38:05 - mmengine - WARNING - text_proj_m.bias is skipped since its requires_grad=False
2025/08/28 13:38:24 - mmengine - INFO - load model from: pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth
2025/08/28 13:38:24 - mmengine - INFO - Loads checkpoint by local backend from path: pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth
2025/08/28 13:38:25 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: text_encoder.cls.predictions.bias, text_encoder.cls.predictions.transform.dense.weight, text_encoder.cls.predictions.transform.dense.bias, text_encoder.cls.predictions.transform.LayerNorm.weight, text_encoder.cls.predictions.transform.LayerNorm.bias, text_encoder.cls.predictions.decoder.weight, text_encoder.cls.predictions.decoder.bias

missing keys in source state_dict: vision_encoder.layers.0.blocks.0.attn.relative_position_index, vision_encoder.layers.0.blocks.1.attn_mask, vision_encoder.layers.0.blocks.1.attn.relative_position_index, vision_encoder.layers.1.blocks.0.attn.relative_position_index, vision_encoder.layers.1.blocks.1.attn_mask, vision_encoder.layers.1.blocks.1.attn.relative_position_index, vision_encoder.layers.2.blocks.0.attn.relative_position_index, vision_encoder.layers.2.blocks.1.attn_mask, vision_encoder.layers.2.blocks.1.attn.relative_position_index, vision_encoder.layers.2.blocks.2.attn.relative_position_index, vision_encoder.layers.2.blocks.3.attn_mask, vision_encoder.layers.2.blocks.3.attn.relative_position_index, vision_encoder.layers.2.blocks.4.attn.relative_position_index, vision_encoder.layers.2.blocks.5.attn_mask, vision_encoder.layers.2.blocks.5.attn.relative_position_index, vision_encoder.layers.2.blocks.6.attn.relative_position_index, vision_encoder.layers.2.blocks.7.attn_mask, vision_encoder.layers.2.blocks.7.attn.relative_position_index, vision_encoder.layers.2.blocks.8.attn.relative_position_index, vision_encoder.layers.2.blocks.9.attn_mask, vision_encoder.layers.2.blocks.9.attn.relative_position_index, vision_encoder.layers.2.blocks.10.attn.relative_position_index, vision_encoder.layers.2.blocks.11.attn_mask, vision_encoder.layers.2.blocks.11.attn.relative_position_index, vision_encoder.layers.2.blocks.12.attn.relative_position_index, vision_encoder.layers.2.blocks.13.attn_mask, vision_encoder.layers.2.blocks.13.attn.relative_position_index, vision_encoder.layers.2.blocks.14.attn.relative_position_index, vision_encoder.layers.2.blocks.15.attn_mask, vision_encoder.layers.2.blocks.15.attn.relative_position_index, vision_encoder.layers.2.blocks.16.attn.relative_position_index, vision_encoder.layers.2.blocks.17.attn_mask, vision_encoder.layers.2.blocks.17.attn.relative_position_index, vision_encoder.layers.3.blocks.0.attn.relative_position_index, vision_encoder.layers.3.blocks.1.attn.relative_position_index, itc_head.image_queue, itc_head.text_queue, itc_head.idx_queue, itc_head.queue_ptr, vision_encoder_m.patch_embed.proj.weight, vision_encoder_m.patch_embed.proj.bias, vision_encoder_m.patch_embed.norm.weight, vision_encoder_m.patch_embed.norm.bias, vision_encoder_m.layers.0.blocks.0.norm1.weight, vision_encoder_m.layers.0.blocks.0.norm1.bias, vision_encoder_m.layers.0.blocks.0.attn.relative_position_bias_table, vision_encoder_m.layers.0.blocks.0.attn.relative_position_index, vision_encoder_m.layers.0.blocks.0.attn.qkv.weight, vision_encoder_m.layers.0.blocks.0.attn.qkv.bias, vision_encoder_m.layers.0.blocks.0.attn.proj.weight, vision_encoder_m.layers.0.blocks.0.attn.proj.bias, vision_encoder_m.layers.0.blocks.0.norm2.weight, vision_encoder_m.layers.0.blocks.0.norm2.bias, vision_encoder_m.layers.0.blocks.0.mlp.fc1.weight, vision_encoder_m.layers.0.blocks.0.mlp.fc1.bias, vision_encoder_m.layers.0.blocks.0.mlp.fc2.weight, vision_encoder_m.layers.0.blocks.0.mlp.fc2.bias, vision_encoder_m.layers.0.blocks.1.attn_mask, vision_encoder_m.layers.0.blocks.1.norm1.weight, vision_encoder_m.layers.0.blocks.1.norm1.bias, vision_encoder_m.layers.0.blocks.1.attn.relative_position_bias_table, vision_encoder_m.layers.0.blocks.1.attn.relative_position_index, vision_encoder_m.layers.0.blocks.1.attn.qkv.weight, vision_encoder_m.layers.0.blocks.1.attn.qkv.bias, vision_encoder_m.layers.0.blocks.1.attn.proj.weight, vision_encoder_m.layers.0.blocks.1.attn.proj.bias, vision_encoder_m.layers.0.blocks.1.norm2.weight, vision_encoder_m.layers.0.blocks.1.norm2.bias, vision_encoder_m.layers.0.blocks.1.mlp.fc1.weight, vision_encoder_m.layers.0.blocks.1.mlp.fc1.bias, vision_encoder_m.layers.0.blocks.1.mlp.fc2.weight, vision_encoder_m.layers.0.blocks.1.mlp.fc2.bias, vision_encoder_m.layers.0.downsample.reduction.weight, vision_encoder_m.layers.0.downsample.norm.weight, vision_encoder_m.layers.0.downsample.norm.bias, vision_encoder_m.layers.1.blocks.0.norm1.weight, vision_encoder_m.layers.1.blocks.0.norm1.bias, vision_encoder_m.layers.1.blocks.0.attn.relative_position_bias_table, vision_encoder_m.layers.1.blocks.0.attn.relative_position_index, vision_encoder_m.layers.1.blocks.0.attn.qkv.weight, vision_encoder_m.layers.1.blocks.0.attn.qkv.bias, vision_encoder_m.layers.1.blocks.0.attn.proj.weight, vision_encoder_m.layers.1.blocks.0.attn.proj.bias, vision_encoder_m.layers.1.blocks.0.norm2.weight, vision_encoder_m.layers.1.blocks.0.norm2.bias, vision_encoder_m.layers.1.blocks.0.mlp.fc1.weight, vision_encoder_m.layers.1.blocks.0.mlp.fc1.bias, vision_encoder_m.layers.1.blocks.0.mlp.fc2.weight, vision_encoder_m.layers.1.blocks.0.mlp.fc2.bias, vision_encoder_m.layers.1.blocks.1.attn_mask, vision_encoder_m.layers.1.blocks.1.norm1.weight, vision_encoder_m.layers.1.blocks.1.norm1.bias, vision_encoder_m.layers.1.blocks.1.attn.relative_position_bias_table, vision_encoder_m.layers.1.blocks.1.attn.relative_position_index, vision_encoder_m.layers.1.blocks.1.attn.qkv.weight, vision_encoder_m.layers.1.blocks.1.attn.qkv.bias, vision_encoder_m.layers.1.blocks.1.attn.proj.weight, vision_encoder_m.layers.1.blocks.1.attn.proj.bias, vision_encoder_m.layers.1.blocks.1.norm2.weight, vision_encoder_m.layers.1.blocks.1.norm2.bias, vision_encoder_m.layers.1.blocks.1.mlp.fc1.weight, vision_encoder_m.layers.1.blocks.1.mlp.fc1.bias, vision_encoder_m.layers.1.blocks.1.mlp.fc2.weight, vision_encoder_m.layers.1.blocks.1.mlp.fc2.bias, vision_encoder_m.layers.1.downsample.reduction.weight, vision_encoder_m.layers.1.downsample.norm.weight, vision_encoder_m.layers.1.downsample.norm.bias, vision_encoder_m.layers.2.blocks.0.norm1.weight, vision_encoder_m.layers.2.blocks.0.norm1.bias, vision_encoder_m.layers.2.blocks.0.attn.relative_position_bias_table, vision_encoder_m.layers.2.blocks.0.attn.relative_position_index, vision_encoder_m.layers.2.blocks.0.attn.qkv.weight, vision_encoder_m.layers.2.blocks.0.attn.qkv.bias, vision_encoder_m.layers.2.blocks.0.attn.proj.weight, vision_encoder_m.layers.2.blocks.0.attn.proj.bias, vision_encoder_m.layers.2.blocks.0.norm2.weight, vision_encoder_m.layers.2.blocks.0.norm2.bias, vision_encoder_m.layers.2.blocks.0.mlp.fc1.weight, vision_encoder_m.layers.2.blocks.0.mlp.fc1.bias, vision_encoder_m.layers.2.blocks.0.mlp.fc2.weight, vision_encoder_m.layers.2.blocks.0.mlp.fc2.bias, vision_encoder_m.layers.2.blocks.1.attn_mask, vision_encoder_m.layers.2.blocks.1.norm1.weight, vision_encoder_m.layers.2.blocks.1.norm1.bias, vision_encoder_m.layers.2.blocks.1.attn.relative_position_bias_table, vision_encoder_m.layers.2.blocks.1.attn.relative_position_index, vision_encoder_m.layers.2.blocks.1.attn.qkv.weight, vision_encoder_m.layers.2.blocks.1.attn.qkv.bias, vision_encoder_m.layers.2.blocks.1.attn.proj.weight, vision_encoder_m.layers.2.blocks.1.attn.proj.bias, vision_encoder_m.layers.2.blocks.1.norm2.weight, vision_encoder_m.layers.2.blocks.1.norm2.bias, vision_encoder_m.layers.2.blocks.1.mlp.fc1.weight, vision_encoder_m.layers.2.blocks.1.mlp.fc1.bias, vision_encoder_m.layers.2.blocks.1.mlp.fc2.weight, vision_encoder_m.layers.2.blocks.1.mlp.fc2.bias, vision_encoder_m.layers.2.blocks.2.norm1.weight, vision_encoder_m.layers.2.blocks.2.norm1.bias, vision_encoder_m.layers.2.blocks.2.attn.relative_position_bias_table, vision_encoder_m.layers.2.blocks.2.attn.relative_position_index, vision_encoder_m.layers.2.blocks.2.attn.qkv.weight, vision_encoder_m.layers.2.blocks.2.attn.qkv.bias, vision_encoder_m.layers.2.blocks.2.attn.proj.weight, vision_encoder_m.layers.2.blocks.2.attn.proj.bias, vision_encoder_m.layers.2.blocks.2.norm2.weight, vision_encoder_m.layers.2.blocks.2.norm2.bias, vision_encoder_m.layers.2.blocks.2.mlp.fc1.weight, vision_encoder_m.layers.2.blocks.2.mlp.fc1.bias, vision_encoder_m.layers.2.blocks.2.mlp.fc2.weight, vision_encoder_m.layers.2.blocks.2.mlp.fc2.bias, vision_encoder_m.layers.2.blocks.3.attn_mask, vision_encoder_m.layers.2.blocks.3.norm1.weight, vision_encoder_m.layers.2.blocks.3.norm1.bias, vision_encoder_m.layers.2.blocks.3.attn.relative_position_bias_table, vision_encoder_m.layers.2.blocks.3.attn.relative_position_index, vision_encoder_m.layers.2.blocks.3.attn.qkv.weight, vision_encoder_m.layers.2.blocks.3.attn.qkv.bias, vision_encoder_m.layers.2.blocks.3.attn.proj.weight, vision_encoder_m.layers.2.blocks.3.attn.proj.bias, vision_encoder_m.layers.2.blocks.3.norm2.weight, vision_encoder_m.layers.2.blocks.3.norm2.bias, vision_encoder_m.layers.2.blocks.3.mlp.fc1.weight, vision_encoder_m.layers.2.blocks.3.mlp.fc1.bias, vision_encoder_m.layers.2.blocks.3.mlp.fc2.weight, vision_encoder_m.layers.2.blocks.3.mlp.fc2.bias, vision_encoder_m.layers.2.blocks.4.norm1.weight, vision_encoder_m.layers.2.blocks.4.norm1.bias, vision_encoder_m.layers.2.blocks.4.attn.relative_position_bias_table, vision_encoder_m.layers.2.blocks.4.attn.relative_position_index, vision_encoder_m.layers.2.blocks.4.attn.qkv.weight, vision_encoder_m.layers.2.blocks.4.attn.qkv.bias, vision_encoder_m.layers.2.blocks.4.attn.proj.weight, vision_encoder_m.layers.2.blocks.4.attn.proj.bias, vision_encoder_m.layers.2.blocks.4.norm2.weight, vision_encoder_m.layers.2.blocks.4.norm2.bias, vision_encoder_m.layers.2.blocks.4.mlp.fc1.weight, vision_encoder_m.layers.2.blocks.4.mlp.fc1.bias, vision_encoder_m.layers.2.blocks.4.mlp.fc2.weight, vision_encoder_m.layers.2.blocks.4.mlp.fc2.bias, vision_encoder_m.layers.2.blocks.5.attn_mask, vision_encoder_m.layers.2.blocks.5.norm1.weight, vision_encoder_m.layers.2.blocks.5.norm1.bias, vision_encoder_m.layers.2.blocks.5.attn.relative_position_bias_table, vision_encoder_m.layers.2.blocks.5.attn.relative_position_index, vision_encoder_m.layers.2.blocks.5.attn.qkv.weight, vision_encoder_m.layers.2.blocks.5.attn.qkv.bias, vision_encoder_m.layers.2.blocks.5.attn.proj.weight, vision_encoder_m.layers.2.blocks.5.attn.proj.bias, vision_encoder_m.layers.2.blocks.5.norm2.weight, vision_encoder_m.layers.2.blocks.5.norm2.bias, vision_encoder_m.layers.2.blocks.5.mlp.fc1.weight, vision_encoder_m.layers.2.blocks.5.mlp.fc1.bias, vision_encoder_m.layers.2.blocks.5.mlp.fc2.weight, vision_encoder_m.layers.2.blocks.5.mlp.fc2.bias, vision_encoder_m.layers.2.blocks.6.norm1.weight, vision_encoder_m.layers.2.blocks.6.norm1.bias, vision_encoder_m.layers.2.blocks.6.attn.relative_position_bias_table, vision_encoder_m.layers.2.blocks.6.attn.relative_position_index, vision_encoder_m.layers.2.blocks.6.attn.qkv.weight, vision_encoder_m.layers.2.blocks.6.attn.qkv.bias, vision_encoder_m.layers.2.blocks.6.attn.proj.weight, vision_encoder_m.layers.2.blocks.6.attn.proj.bias, vision_encoder_m.layers.2.blocks.6.norm2.weight, vision_encoder_m.layers.2.blocks.6.norm2.bias, vision_encoder_m.layers.2.blocks.6.mlp.fc1.weight, vision_encoder_m.layers.2.blocks.6.mlp.fc1.bias, vision_encoder_m.layers.2.blocks.6.mlp.fc2.weight, vision_encoder_m.layers.2.blocks.6.mlp.fc2.bias, vision_encoder_m.layers.2.blocks.7.attn_mask, vision_encoder_m.layers.2.blocks.7.norm1.weight, vision_encoder_m.layers.2.blocks.7.norm1.bias, vision_encoder_m.layers.2.blocks.7.attn.relative_position_bias_table, vision_encoder_m.layers.2.blocks.7.attn.relative_position_index, vision_encoder_m.layers.2.blocks.7.attn.qkv.weight, vision_encoder_m.layers.2.blocks.7.attn.qkv.bias, vision_encoder_m.layers.2.blocks.7.attn.proj.weight, vision_encoder_m.layers.2.blocks.7.attn.proj.bias, vision_encoder_m.layers.2.blocks.7.norm2.weight, vision_encoder_m.layers.2.blocks.7.norm2.bias, vision_encoder_m.layers.2.blocks.7.mlp.fc1.weight, vision_encoder_m.layers.2.blocks.7.mlp.fc1.bias, vision_encoder_m.layers.2.blocks.7.mlp.fc2.weight, vision_encoder_m.layers.2.blocks.7.mlp.fc2.bias, vision_encoder_m.layers.2.blocks.8.norm1.weight, vision_encoder_m.layers.2.blocks.8.norm1.bias, vision_encoder_m.layers.2.blocks.8.attn.relative_position_bias_table, vision_encoder_m.layers.2.blocks.8.attn.relative_position_index, vision_encoder_m.layers.2.blocks.8.attn.qkv.weight, vision_encoder_m.layers.2.blocks.8.attn.qkv.bias, vision_encoder_m.layers.2.blocks.8.attn.proj.weight, vision_encoder_m.layers.2.blocks.8.attn.proj.bias, vision_encoder_m.layers.2.blocks.8.norm2.weight, vision_encoder_m.layers.2.blocks.8.norm2.bias, vision_encoder_m.layers.2.blocks.8.mlp.fc1.weight, vision_encoder_m.layers.2.blocks.8.mlp.fc1.bias, vision_encoder_m.layers.2.blocks.8.mlp.fc2.weight, vision_encoder_m.layers.2.blocks.8.mlp.fc2.bias, vision_encoder_m.layers.2.blocks.9.attn_mask, vision_encoder_m.layers.2.blocks.9.norm1.weight, vision_encoder_m.layers.2.blocks.9.norm1.bias, vision_encoder_m.layers.2.blocks.9.attn.relative_position_bias_table, vision_encoder_m.layers.2.blocks.9.attn.relative_position_index, vision_encoder_m.layers.2.blocks.9.attn.qkv.weight, vision_encoder_m.layers.2.blocks.9.attn.qkv.bias, vision_encoder_m.layers.2.blocks.9.attn.proj.weight, vision_encoder_m.layers.2.blocks.9.attn.proj.bias, vision_encoder_m.layers.2.blocks.9.norm2.weight, vision_encoder_m.layers.2.blocks.9.norm2.bias, vision_encoder_m.layers.2.blocks.9.mlp.fc1.weight, vision_encoder_m.layers.2.blocks.9.mlp.fc1.bias, vision_encoder_m.layers.2.blocks.9.mlp.fc2.weight, vision_encoder_m.layers.2.blocks.9.mlp.fc2.bias, vision_encoder_m.layers.2.blocks.10.norm1.weight, vision_encoder_m.layers.2.blocks.10.norm1.bias, vision_encoder_m.layers.2.blocks.10.attn.relative_position_bias_table, vision_encoder_m.layers.2.blocks.10.attn.relative_position_index, vision_encoder_m.layers.2.blocks.10.attn.qkv.weight, vision_encoder_m.layers.2.blocks.10.attn.qkv.bias, vision_encoder_m.layers.2.blocks.10.attn.proj.weight, vision_encoder_m.layers.2.blocks.10.attn.proj.bias, vision_encoder_m.layers.2.blocks.10.norm2.weight, vision_encoder_m.layers.2.blocks.10.norm2.bias, vision_encoder_m.layers.2.blocks.10.mlp.fc1.weight, vision_encoder_m.layers.2.blocks.10.mlp.fc1.bias, vision_encoder_m.layers.2.blocks.10.mlp.fc2.weight, vision_encoder_m.layers.2.blocks.10.mlp.fc2.bias, vision_encoder_m.layers.2.blocks.11.attn_mask, vision_encoder_m.layers.2.blocks.11.norm1.weight, vision_encoder_m.layers.2.blocks.11.norm1.bias, vision_encoder_m.layers.2.blocks.11.attn.relative_position_bias_table, vision_encoder_m.layers.2.blocks.11.attn.relative_position_index, vision_encoder_m.layers.2.blocks.11.attn.qkv.weight, vision_encoder_m.layers.2.blocks.11.attn.qkv.bias, vision_encoder_m.layers.2.blocks.11.attn.proj.weight, vision_encoder_m.layers.2.blocks.11.attn.proj.bias, vision_encoder_m.layers.2.blocks.11.norm2.weight, vision_encoder_m.layers.2.blocks.11.norm2.bias, vision_encoder_m.layers.2.blocks.11.mlp.fc1.weight, vision_encoder_m.layers.2.blocks.11.mlp.fc1.bias, vision_encoder_m.layers.2.blocks.11.mlp.fc2.weight, vision_encoder_m.layers.2.blocks.11.mlp.fc2.bias, vision_encoder_m.layers.2.blocks.12.norm1.weight, vision_encoder_m.layers.2.blocks.12.norm1.bias, vision_encoder_m.layers.2.blocks.12.attn.relative_position_bias_table, vision_encoder_m.layers.2.blocks.12.attn.relative_position_index, vision_encoder_m.layers.2.blocks.12.attn.qkv.weight, vision_encoder_m.layers.2.blocks.12.attn.qkv.bias, vision_encoder_m.layers.2.blocks.12.attn.proj.weight, vision_encoder_m.layers.2.blocks.12.attn.proj.bias, vision_encoder_m.layers.2.blocks.12.norm2.weight, vision_encoder_m.layers.2.blocks.12.norm2.bias, vision_encoder_m.layers.2.blocks.12.mlp.fc1.weight, vision_encoder_m.layers.2.blocks.12.mlp.fc1.bias, vision_encoder_m.layers.2.blocks.12.mlp.fc2.weight, vision_encoder_m.layers.2.blocks.12.mlp.fc2.bias, vision_encoder_m.layers.2.blocks.13.attn_mask, vision_encoder_m.layers.2.blocks.13.norm1.weight, vision_encoder_m.layers.2.blocks.13.norm1.bias, vision_encoder_m.layers.2.blocks.13.attn.relative_position_bias_table, vision_encoder_m.layers.2.blocks.13.attn.relative_position_index, vision_encoder_m.layers.2.blocks.13.attn.qkv.weight, vision_encoder_m.layers.2.blocks.13.attn.qkv.bias, vision_encoder_m.layers.2.blocks.13.attn.proj.weight, vision_encoder_m.layers.2.blocks.13.attn.proj.bias, vision_encoder_m.layers.2.blocks.13.norm2.weight, vision_encoder_m.layers.2.blocks.13.norm2.bias, vision_encoder_m.layers.2.blocks.13.mlp.fc1.weight, vision_encoder_m.layers.2.blocks.13.mlp.fc1.bias, vision_encoder_m.layers.2.blocks.13.mlp.fc2.weight, vision_encoder_m.layers.2.blocks.13.mlp.fc2.bias, vision_encoder_m.layers.2.blocks.14.norm1.weight, vision_encoder_m.layers.2.blocks.14.norm1.bias, vision_encoder_m.layers.2.blocks.14.attn.relative_position_bias_table, vision_encoder_m.layers.2.blocks.14.attn.relative_position_index, vision_encoder_m.layers.2.blocks.14.attn.qkv.weight, vision_encoder_m.layers.2.blocks.14.attn.qkv.bias, vision_encoder_m.layers.2.blocks.14.attn.proj.weight, vision_encoder_m.layers.2.blocks.14.attn.proj.bias, vision_encoder_m.layers.2.blocks.14.norm2.weight, vision_encoder_m.layers.2.blocks.14.norm2.bias, vision_encoder_m.layers.2.blocks.14.mlp.fc1.weight, vision_encoder_m.layers.2.blocks.14.mlp.fc1.bias, vision_encoder_m.layers.2.blocks.14.mlp.fc2.weight, vision_encoder_m.layers.2.blocks.14.mlp.fc2.bias, vision_encoder_m.layers.2.blocks.15.attn_mask, vision_encoder_m.layers.2.blocks.15.norm1.weight, vision_encoder_m.layers.2.blocks.15.norm1.bias, vision_encoder_m.layers.2.blocks.15.attn.relative_position_bias_table, vision_encoder_m.layers.2.blocks.15.attn.relative_position_index, vision_encoder_m.layers.2.blocks.15.attn.qkv.weight, vision_encoder_m.layers.2.blocks.15.attn.qkv.bias, vision_encoder_m.layers.2.blocks.15.attn.proj.weight, vision_encoder_m.layers.2.blocks.15.attn.proj.bias, vision_encoder_m.layers.2.blocks.15.norm2.weight, vision_encoder_m.layers.2.blocks.15.norm2.bias, vision_encoder_m.layers.2.blocks.15.mlp.fc1.weight, vision_encoder_m.layers.2.blocks.15.mlp.fc1.bias, vision_encoder_m.layers.2.blocks.15.mlp.fc2.weight, vision_encoder_m.layers.2.blocks.15.mlp.fc2.bias, vision_encoder_m.layers.2.blocks.16.norm1.weight, vision_encoder_m.layers.2.blocks.16.norm1.bias, vision_encoder_m.layers.2.blocks.16.attn.relative_position_bias_table, vision_encoder_m.layers.2.blocks.16.attn.relative_position_index, vision_encoder_m.layers.2.blocks.16.attn.qkv.weight, vision_encoder_m.layers.2.blocks.16.attn.qkv.bias, vision_encoder_m.layers.2.blocks.16.attn.proj.weight, vision_encoder_m.layers.2.blocks.16.attn.proj.bias, vision_encoder_m.layers.2.blocks.16.norm2.weight, vision_encoder_m.layers.2.blocks.16.norm2.bias, vision_encoder_m.layers.2.blocks.16.mlp.fc1.weight, vision_encoder_m.layers.2.blocks.16.mlp.fc1.bias, vision_encoder_m.layers.2.blocks.16.mlp.fc2.weight, vision_encoder_m.layers.2.blocks.16.mlp.fc2.bias, vision_encoder_m.layers.2.blocks.17.attn_mask, vision_encoder_m.layers.2.blocks.17.norm1.weight, vision_encoder_m.layers.2.blocks.17.norm1.bias, vision_encoder_m.layers.2.blocks.17.attn.relative_position_bias_table, vision_encoder_m.layers.2.blocks.17.attn.relative_position_index, vision_encoder_m.layers.2.blocks.17.attn.qkv.weight, vision_encoder_m.layers.2.blocks.17.attn.qkv.bias, vision_encoder_m.layers.2.blocks.17.attn.proj.weight, vision_encoder_m.layers.2.blocks.17.attn.proj.bias, vision_encoder_m.layers.2.blocks.17.norm2.weight, vision_encoder_m.layers.2.blocks.17.norm2.bias, vision_encoder_m.layers.2.blocks.17.mlp.fc1.weight, vision_encoder_m.layers.2.blocks.17.mlp.fc1.bias, vision_encoder_m.layers.2.blocks.17.mlp.fc2.weight, vision_encoder_m.layers.2.blocks.17.mlp.fc2.bias, vision_encoder_m.layers.2.downsample.reduction.weight, vision_encoder_m.layers.2.downsample.norm.weight, vision_encoder_m.layers.2.downsample.norm.bias, vision_encoder_m.layers.3.blocks.0.norm1.weight, vision_encoder_m.layers.3.blocks.0.norm1.bias, vision_encoder_m.layers.3.blocks.0.attn.relative_position_bias_table, vision_encoder_m.layers.3.blocks.0.attn.relative_position_index, vision_encoder_m.layers.3.blocks.0.attn.qkv.weight, vision_encoder_m.layers.3.blocks.0.attn.qkv.bias, vision_encoder_m.layers.3.blocks.0.attn.proj.weight, vision_encoder_m.layers.3.blocks.0.attn.proj.bias, vision_encoder_m.layers.3.blocks.0.norm2.weight, vision_encoder_m.layers.3.blocks.0.norm2.bias, vision_encoder_m.layers.3.blocks.0.mlp.fc1.weight, vision_encoder_m.layers.3.blocks.0.mlp.fc1.bias, vision_encoder_m.layers.3.blocks.0.mlp.fc2.weight, vision_encoder_m.layers.3.blocks.0.mlp.fc2.bias, vision_encoder_m.layers.3.blocks.1.norm1.weight, vision_encoder_m.layers.3.blocks.1.norm1.bias, vision_encoder_m.layers.3.blocks.1.attn.relative_position_bias_table, vision_encoder_m.layers.3.blocks.1.attn.relative_position_index, vision_encoder_m.layers.3.blocks.1.attn.qkv.weight, vision_encoder_m.layers.3.blocks.1.attn.qkv.bias, vision_encoder_m.layers.3.blocks.1.attn.proj.weight, vision_encoder_m.layers.3.blocks.1.attn.proj.bias, vision_encoder_m.layers.3.blocks.1.norm2.weight, vision_encoder_m.layers.3.blocks.1.norm2.bias, vision_encoder_m.layers.3.blocks.1.mlp.fc1.weight, vision_encoder_m.layers.3.blocks.1.mlp.fc1.bias, vision_encoder_m.layers.3.blocks.1.mlp.fc2.weight, vision_encoder_m.layers.3.blocks.1.mlp.fc2.bias, vision_encoder_m.norm.weight, vision_encoder_m.norm.bias, text_encoder_m.embeddings.position_ids, text_encoder_m.embeddings.word_embeddings.weight, text_encoder_m.embeddings.position_embeddings.weight, text_encoder_m.embeddings.token_type_embeddings.weight, text_encoder_m.embeddings.LayerNorm.weight, text_encoder_m.embeddings.LayerNorm.bias, text_encoder_m.encoder.layer.0.attention.self.query.weight, text_encoder_m.encoder.layer.0.attention.self.query.bias, text_encoder_m.encoder.layer.0.attention.self.key.weight, text_encoder_m.encoder.layer.0.attention.self.key.bias, text_encoder_m.encoder.layer.0.attention.self.value.weight, text_encoder_m.encoder.layer.0.attention.self.value.bias, text_encoder_m.encoder.layer.0.attention.output.dense.weight, text_encoder_m.encoder.layer.0.attention.output.dense.bias, text_encoder_m.encoder.layer.0.attention.output.LayerNorm.weight, text_encoder_m.encoder.layer.0.attention.output.LayerNorm.bias, text_encoder_m.encoder.layer.0.intermediate.dense.weight, text_encoder_m.encoder.layer.0.intermediate.dense.bias, text_encoder_m.encoder.layer.0.output.dense.weight, text_encoder_m.encoder.layer.0.output.dense.bias, text_encoder_m.encoder.layer.0.output.LayerNorm.weight, text_encoder_m.encoder.layer.0.output.LayerNorm.bias, text_encoder_m.encoder.layer.1.attention.self.query.weight, text_encoder_m.encoder.layer.1.attention.self.query.bias, text_encoder_m.encoder.layer.1.attention.self.key.weight, text_encoder_m.encoder.layer.1.attention.self.key.bias, text_encoder_m.encoder.layer.1.attention.self.value.weight, text_encoder_m.encoder.layer.1.attention.self.value.bias, text_encoder_m.encoder.layer.1.attention.output.dense.weight, text_encoder_m.encoder.layer.1.attention.output.dense.bias, text_encoder_m.encoder.layer.1.attention.output.LayerNorm.weight, text_encoder_m.encoder.layer.1.attention.output.LayerNorm.bias, text_encoder_m.encoder.layer.1.intermediate.dense.weight, text_encoder_m.encoder.layer.1.intermediate.dense.bias, text_encoder_m.encoder.layer.1.output.dense.weight, text_encoder_m.encoder.layer.1.output.dense.bias, text_encoder_m.encoder.layer.1.output.LayerNorm.weight, text_encoder_m.encoder.layer.1.output.LayerNorm.bias, text_encoder_m.encoder.layer.2.attention.self.query.weight, text_encoder_m.encoder.layer.2.attention.self.query.bias, text_encoder_m.encoder.layer.2.attention.self.key.weight, text_encoder_m.encoder.layer.2.attention.self.key.bias, text_encoder_m.encoder.layer.2.attention.self.value.weight, text_encoder_m.encoder.layer.2.attention.self.value.bias, text_encoder_m.encoder.layer.2.attention.output.dense.weight, text_encoder_m.encoder.layer.2.attention.output.dense.bias, text_encoder_m.encoder.layer.2.attention.output.LayerNorm.weight, text_encoder_m.encoder.layer.2.attention.output.LayerNorm.bias, text_encoder_m.encoder.layer.2.intermediate.dense.weight, text_encoder_m.encoder.layer.2.intermediate.dense.bias, text_encoder_m.encoder.layer.2.output.dense.weight, text_encoder_m.encoder.layer.2.output.dense.bias, text_encoder_m.encoder.layer.2.output.LayerNorm.weight, text_encoder_m.encoder.layer.2.output.LayerNorm.bias, text_encoder_m.encoder.layer.3.attention.self.query.weight, text_encoder_m.encoder.layer.3.attention.self.query.bias, text_encoder_m.encoder.layer.3.attention.self.key.weight, text_encoder_m.encoder.layer.3.attention.self.key.bias, text_encoder_m.encoder.layer.3.attention.self.value.weight, text_encoder_m.encoder.layer.3.attention.self.value.bias, text_encoder_m.encoder.layer.3.attention.output.dense.weight, text_encoder_m.encoder.layer.3.attention.output.dense.bias, text_encoder_m.encoder.layer.3.attention.output.LayerNorm.weight, text_encoder_m.encoder.layer.3.attention.output.LayerNorm.bias, text_encoder_m.encoder.layer.3.intermediate.dense.weight, text_encoder_m.encoder.layer.3.intermediate.dense.bias, text_encoder_m.encoder.layer.3.output.dense.weight, text_encoder_m.encoder.layer.3.output.dense.bias, text_encoder_m.encoder.layer.3.output.LayerNorm.weight, text_encoder_m.encoder.layer.3.output.LayerNorm.bias, text_encoder_m.encoder.layer.4.attention.self.query.weight, text_encoder_m.encoder.layer.4.attention.self.query.bias, text_encoder_m.encoder.layer.4.attention.self.key.weight, text_encoder_m.encoder.layer.4.attention.self.key.bias, text_encoder_m.encoder.layer.4.attention.self.value.weight, text_encoder_m.encoder.layer.4.attention.self.value.bias, text_encoder_m.encoder.layer.4.attention.output.dense.weight, text_encoder_m.encoder.layer.4.attention.output.dense.bias, text_encoder_m.encoder.layer.4.attention.output.LayerNorm.weight, text_encoder_m.encoder.layer.4.attention.output.LayerNorm.bias, text_encoder_m.encoder.layer.4.intermediate.dense.weight, text_encoder_m.encoder.layer.4.intermediate.dense.bias, text_encoder_m.encoder.layer.4.output.dense.weight, text_encoder_m.encoder.layer.4.output.dense.bias, text_encoder_m.encoder.layer.4.output.LayerNorm.weight, text_encoder_m.encoder.layer.4.output.LayerNorm.bias, text_encoder_m.encoder.layer.5.attention.self.query.weight, text_encoder_m.encoder.layer.5.attention.self.query.bias, text_encoder_m.encoder.layer.5.attention.self.key.weight, text_encoder_m.encoder.layer.5.attention.self.key.bias, text_encoder_m.encoder.layer.5.attention.self.value.weight, text_encoder_m.encoder.layer.5.attention.self.value.bias, text_encoder_m.encoder.layer.5.attention.output.dense.weight, text_encoder_m.encoder.layer.5.attention.output.dense.bias, text_encoder_m.encoder.layer.5.attention.output.LayerNorm.weight, text_encoder_m.encoder.layer.5.attention.output.LayerNorm.bias, text_encoder_m.encoder.layer.5.intermediate.dense.weight, text_encoder_m.encoder.layer.5.intermediate.dense.bias, text_encoder_m.encoder.layer.5.output.dense.weight, text_encoder_m.encoder.layer.5.output.dense.bias, text_encoder_m.encoder.layer.5.output.LayerNorm.weight, text_encoder_m.encoder.layer.5.output.LayerNorm.bias, text_encoder_m.encoder.layer.6.attention.self.query.weight, text_encoder_m.encoder.layer.6.attention.self.query.bias, text_encoder_m.encoder.layer.6.attention.self.key.weight, text_encoder_m.encoder.layer.6.attention.self.key.bias, text_encoder_m.encoder.layer.6.attention.self.value.weight, text_encoder_m.encoder.layer.6.attention.self.value.bias, text_encoder_m.encoder.layer.6.attention.output.dense.weight, text_encoder_m.encoder.layer.6.attention.output.dense.bias, text_encoder_m.encoder.layer.6.attention.output.LayerNorm.weight, text_encoder_m.encoder.layer.6.attention.output.LayerNorm.bias, text_encoder_m.encoder.layer.6.crossattention.self.query.weight, text_encoder_m.encoder.layer.6.crossattention.self.query.bias, text_encoder_m.encoder.layer.6.crossattention.self.key.weight, text_encoder_m.encoder.layer.6.crossattention.self.key.bias, text_encoder_m.encoder.layer.6.crossattention.self.value.weight, text_encoder_m.encoder.layer.6.crossattention.self.value.bias, text_encoder_m.encoder.layer.6.crossattention.output.dense.weight, text_encoder_m.encoder.layer.6.crossattention.output.dense.bias, text_encoder_m.encoder.layer.6.crossattention.output.LayerNorm.weight, text_encoder_m.encoder.layer.6.crossattention.output.LayerNorm.bias, text_encoder_m.encoder.layer.6.intermediate.dense.weight, text_encoder_m.encoder.layer.6.intermediate.dense.bias, text_encoder_m.encoder.layer.6.output.dense.weight, text_encoder_m.encoder.layer.6.output.dense.bias, text_encoder_m.encoder.layer.6.output.LayerNorm.weight, text_encoder_m.encoder.layer.6.output.LayerNorm.bias, text_encoder_m.encoder.layer.7.attention.self.query.weight, text_encoder_m.encoder.layer.7.attention.self.query.bias, text_encoder_m.encoder.layer.7.attention.self.key.weight, text_encoder_m.encoder.layer.7.attention.self.key.bias, text_encoder_m.encoder.layer.7.attention.self.value.weight, text_encoder_m.encoder.layer.7.attention.self.value.bias, text_encoder_m.encoder.layer.7.attention.output.dense.weight, text_encoder_m.encoder.layer.7.attention.output.dense.bias, text_encoder_m.encoder.layer.7.attention.output.LayerNorm.weight, text_encoder_m.encoder.layer.7.attention.output.LayerNorm.bias, text_encoder_m.encoder.layer.7.crossattention.self.query.weight, text_encoder_m.encoder.layer.7.crossattention.self.query.bias, text_encoder_m.encoder.layer.7.crossattention.self.key.weight, text_encoder_m.encoder.layer.7.crossattention.self.key.bias, text_encoder_m.encoder.layer.7.crossattention.self.value.weight, text_encoder_m.encoder.layer.7.crossattention.self.value.bias, text_encoder_m.encoder.layer.7.crossattention.output.dense.weight, text_encoder_m.encoder.layer.7.crossattention.output.dense.bias, text_encoder_m.encoder.layer.7.crossattention.output.LayerNorm.weight, text_encoder_m.encoder.layer.7.crossattention.output.LayerNorm.bias, text_encoder_m.encoder.layer.7.intermediate.dense.weight, text_encoder_m.encoder.layer.7.intermediate.dense.bias, text_encoder_m.encoder.layer.7.output.dense.weight, text_encoder_m.encoder.layer.7.output.dense.bias, text_encoder_m.encoder.layer.7.output.LayerNorm.weight, text_encoder_m.encoder.layer.7.output.LayerNorm.bias, text_encoder_m.encoder.layer.8.attention.self.query.weight, text_encoder_m.encoder.layer.8.attention.self.query.bias, text_encoder_m.encoder.layer.8.attention.self.key.weight, text_encoder_m.encoder.layer.8.attention.self.key.bias, text_encoder_m.encoder.layer.8.attention.self.value.weight, text_encoder_m.encoder.layer.8.attention.self.value.bias, text_encoder_m.encoder.layer.8.attention.output.dense.weight, text_encoder_m.encoder.layer.8.attention.output.dense.bias, text_encoder_m.encoder.layer.8.attention.output.LayerNorm.weight, text_encoder_m.encoder.layer.8.attention.output.LayerNorm.bias, text_encoder_m.encoder.layer.8.crossattention.self.query.weight, text_encoder_m.encoder.layer.8.crossattention.self.query.bias, text_encoder_m.encoder.layer.8.crossattention.self.key.weight, text_encoder_m.encoder.layer.8.crossattention.self.key.bias, text_encoder_m.encoder.layer.8.crossattention.self.value.weight, text_encoder_m.encoder.layer.8.crossattention.self.value.bias, text_encoder_m.encoder.layer.8.crossattention.output.dense.weight, text_encoder_m.encoder.layer.8.crossattention.output.dense.bias, text_encoder_m.encoder.layer.8.crossattention.output.LayerNorm.weight, text_encoder_m.encoder.layer.8.crossattention.output.LayerNorm.bias, text_encoder_m.encoder.layer.8.intermediate.dense.weight, text_encoder_m.encoder.layer.8.intermediate.dense.bias, text_encoder_m.encoder.layer.8.output.dense.weight, text_encoder_m.encoder.layer.8.output.dense.bias, text_encoder_m.encoder.layer.8.output.LayerNorm.weight, text_encoder_m.encoder.layer.8.output.LayerNorm.bias, text_encoder_m.encoder.layer.9.attention.self.query.weight, text_encoder_m.encoder.layer.9.attention.self.query.bias, text_encoder_m.encoder.layer.9.attention.self.key.weight, text_encoder_m.encoder.layer.9.attention.self.key.bias, text_encoder_m.encoder.layer.9.attention.self.value.weight, text_encoder_m.encoder.layer.9.attention.self.value.bias, text_encoder_m.encoder.layer.9.attention.output.dense.weight, text_encoder_m.encoder.layer.9.attention.output.dense.bias, text_encoder_m.encoder.layer.9.attention.output.LayerNorm.weight, text_encoder_m.encoder.layer.9.attention.output.LayerNorm.bias, text_encoder_m.encoder.layer.9.crossattention.self.query.weight, text_encoder_m.encoder.layer.9.crossattention.self.query.bias, text_encoder_m.encoder.layer.9.crossattention.self.key.weight, text_encoder_m.encoder.layer.9.crossattention.self.key.bias, text_encoder_m.encoder.layer.9.crossattention.self.value.weight, text_encoder_m.encoder.layer.9.crossattention.self.value.bias, text_encoder_m.encoder.layer.9.crossattention.output.dense.weight, text_encoder_m.encoder.layer.9.crossattention.output.dense.bias, text_encoder_m.encoder.layer.9.crossattention.output.LayerNorm.weight, text_encoder_m.encoder.layer.9.crossattention.output.LayerNorm.bias, text_encoder_m.encoder.layer.9.intermediate.dense.weight, text_encoder_m.encoder.layer.9.intermediate.dense.bias, text_encoder_m.encoder.layer.9.output.dense.weight, text_encoder_m.encoder.layer.9.output.dense.bias, text_encoder_m.encoder.layer.9.output.LayerNorm.weight, text_encoder_m.encoder.layer.9.output.LayerNorm.bias, text_encoder_m.encoder.layer.10.attention.self.query.weight, text_encoder_m.encoder.layer.10.attention.self.query.bias, text_encoder_m.encoder.layer.10.attention.self.key.weight, text_encoder_m.encoder.layer.10.attention.self.key.bias, text_encoder_m.encoder.layer.10.attention.self.value.weight, text_encoder_m.encoder.layer.10.attention.self.value.bias, text_encoder_m.encoder.layer.10.attention.output.dense.weight, text_encoder_m.encoder.layer.10.attention.output.dense.bias, text_encoder_m.encoder.layer.10.attention.output.LayerNorm.weight, text_encoder_m.encoder.layer.10.attention.output.LayerNorm.bias, text_encoder_m.encoder.layer.10.crossattention.self.query.weight, text_encoder_m.encoder.layer.10.crossattention.self.query.bias, text_encoder_m.encoder.layer.10.crossattention.self.key.weight, text_encoder_m.encoder.layer.10.crossattention.self.key.bias, text_encoder_m.encoder.layer.10.crossattention.self.value.weight, text_encoder_m.encoder.layer.10.crossattention.self.value.bias, text_encoder_m.encoder.layer.10.crossattention.output.dense.weight, text_encoder_m.encoder.layer.10.crossattention.output.dense.bias, text_encoder_m.encoder.layer.10.crossattention.output.LayerNorm.weight, text_encoder_m.encoder.layer.10.crossattention.output.LayerNorm.bias, text_encoder_m.encoder.layer.10.intermediate.dense.weight, text_encoder_m.encoder.layer.10.intermediate.dense.bias, text_encoder_m.encoder.layer.10.output.dense.weight, text_encoder_m.encoder.layer.10.output.dense.bias, text_encoder_m.encoder.layer.10.output.LayerNorm.weight, text_encoder_m.encoder.layer.10.output.LayerNorm.bias, text_encoder_m.encoder.layer.11.attention.self.query.weight, text_encoder_m.encoder.layer.11.attention.self.query.bias, text_encoder_m.encoder.layer.11.attention.self.key.weight, text_encoder_m.encoder.layer.11.attention.self.key.bias, text_encoder_m.encoder.layer.11.attention.self.value.weight, text_encoder_m.encoder.layer.11.attention.self.value.bias, text_encoder_m.encoder.layer.11.attention.output.dense.weight, text_encoder_m.encoder.layer.11.attention.output.dense.bias, text_encoder_m.encoder.layer.11.attention.output.LayerNorm.weight, text_encoder_m.encoder.layer.11.attention.output.LayerNorm.bias, text_encoder_m.encoder.layer.11.crossattention.self.query.weight, text_encoder_m.encoder.layer.11.crossattention.self.query.bias, text_encoder_m.encoder.layer.11.crossattention.self.key.weight, text_encoder_m.encoder.layer.11.crossattention.self.key.bias, text_encoder_m.encoder.layer.11.crossattention.self.value.weight, text_encoder_m.encoder.layer.11.crossattention.self.value.bias, text_encoder_m.encoder.layer.11.crossattention.output.dense.weight, text_encoder_m.encoder.layer.11.crossattention.output.dense.bias, text_encoder_m.encoder.layer.11.crossattention.output.LayerNorm.weight, text_encoder_m.encoder.layer.11.crossattention.output.LayerNorm.bias, text_encoder_m.encoder.layer.11.intermediate.dense.weight, text_encoder_m.encoder.layer.11.intermediate.dense.bias, text_encoder_m.encoder.layer.11.output.dense.weight, text_encoder_m.encoder.layer.11.output.dense.bias, text_encoder_m.encoder.layer.11.output.LayerNorm.weight, text_encoder_m.encoder.layer.11.output.LayerNorm.bias, vision_proj_m.weight, vision_proj_m.bias, text_proj_m.weight, text_proj_m.bias

Name of parameter - Initialization information

temp - torch.Size([]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.patch_embed.proj.weight - torch.Size([128, 3, 4, 4]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.patch_embed.proj.bias - torch.Size([128]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.patch_embed.norm.weight - torch.Size([128]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.patch_embed.norm.bias - torch.Size([128]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.0.norm1.weight - torch.Size([128]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.0.norm1.bias - torch.Size([128]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.0.attn.relative_position_bias_table - torch.Size([529, 4]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.0.attn.qkv.weight - torch.Size([384, 128]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.0.attn.qkv.bias - torch.Size([384]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.0.attn.proj.weight - torch.Size([128, 128]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.0.attn.proj.bias - torch.Size([128]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.0.norm2.weight - torch.Size([128]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.0.norm2.bias - torch.Size([128]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.0.mlp.fc1.weight - torch.Size([512, 128]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.0.mlp.fc1.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.0.mlp.fc2.weight - torch.Size([128, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.0.mlp.fc2.bias - torch.Size([128]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.1.norm1.weight - torch.Size([128]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.1.norm1.bias - torch.Size([128]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.1.attn.relative_position_bias_table - torch.Size([529, 4]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.1.attn.qkv.weight - torch.Size([384, 128]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.1.attn.qkv.bias - torch.Size([384]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.1.attn.proj.weight - torch.Size([128, 128]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.1.attn.proj.bias - torch.Size([128]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.1.norm2.weight - torch.Size([128]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.1.norm2.bias - torch.Size([128]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.1.mlp.fc1.weight - torch.Size([512, 128]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.1.mlp.fc1.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.1.mlp.fc2.weight - torch.Size([128, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.blocks.1.mlp.fc2.bias - torch.Size([128]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.downsample.reduction.weight - torch.Size([256, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.downsample.norm.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.0.downsample.norm.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.0.norm1.weight - torch.Size([256]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.0.norm1.bias - torch.Size([256]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.0.attn.relative_position_bias_table - torch.Size([529, 8]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.0.attn.qkv.weight - torch.Size([768, 256]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.0.attn.qkv.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.0.attn.proj.weight - torch.Size([256, 256]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.0.attn.proj.bias - torch.Size([256]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.0.norm2.weight - torch.Size([256]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.0.norm2.bias - torch.Size([256]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.0.mlp.fc1.weight - torch.Size([1024, 256]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.0.mlp.fc1.bias - torch.Size([1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.0.mlp.fc2.weight - torch.Size([256, 1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.0.mlp.fc2.bias - torch.Size([256]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.1.norm1.weight - torch.Size([256]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.1.norm1.bias - torch.Size([256]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.1.attn.relative_position_bias_table - torch.Size([529, 8]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.1.attn.qkv.weight - torch.Size([768, 256]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.1.attn.qkv.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.1.attn.proj.weight - torch.Size([256, 256]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.1.attn.proj.bias - torch.Size([256]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.1.norm2.weight - torch.Size([256]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.1.norm2.bias - torch.Size([256]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.1.mlp.fc1.weight - torch.Size([1024, 256]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.1.mlp.fc1.bias - torch.Size([1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.1.mlp.fc2.weight - torch.Size([256, 1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.blocks.1.mlp.fc2.bias - torch.Size([256]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.downsample.reduction.weight - torch.Size([512, 1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.downsample.norm.weight - torch.Size([1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.1.downsample.norm.bias - torch.Size([1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.0.norm1.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.0.norm1.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.0.attn.relative_position_bias_table - torch.Size([529, 16]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.0.attn.qkv.weight - torch.Size([1536, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.0.attn.qkv.bias - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.0.attn.proj.weight - torch.Size([512, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.0.attn.proj.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.0.norm2.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.0.norm2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.0.mlp.fc1.weight - torch.Size([2048, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.0.mlp.fc1.bias - torch.Size([2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.0.mlp.fc2.weight - torch.Size([512, 2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.0.mlp.fc2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.1.norm1.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.1.norm1.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.1.attn.relative_position_bias_table - torch.Size([529, 16]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.1.attn.qkv.weight - torch.Size([1536, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.1.attn.qkv.bias - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.1.attn.proj.weight - torch.Size([512, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.1.attn.proj.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.1.norm2.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.1.norm2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.1.mlp.fc1.weight - torch.Size([2048, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.1.mlp.fc1.bias - torch.Size([2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.1.mlp.fc2.weight - torch.Size([512, 2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.1.mlp.fc2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.2.norm1.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.2.norm1.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.2.attn.relative_position_bias_table - torch.Size([529, 16]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.2.attn.qkv.weight - torch.Size([1536, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.2.attn.qkv.bias - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.2.attn.proj.weight - torch.Size([512, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.2.attn.proj.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.2.norm2.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.2.norm2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.2.mlp.fc1.weight - torch.Size([2048, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.2.mlp.fc1.bias - torch.Size([2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.2.mlp.fc2.weight - torch.Size([512, 2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.2.mlp.fc2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.3.norm1.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.3.norm1.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.3.attn.relative_position_bias_table - torch.Size([529, 16]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.3.attn.qkv.weight - torch.Size([1536, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.3.attn.qkv.bias - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.3.attn.proj.weight - torch.Size([512, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.3.attn.proj.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.3.norm2.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.3.norm2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.3.mlp.fc1.weight - torch.Size([2048, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.3.mlp.fc1.bias - torch.Size([2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.3.mlp.fc2.weight - torch.Size([512, 2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.3.mlp.fc2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.4.norm1.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.4.norm1.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.4.attn.relative_position_bias_table - torch.Size([529, 16]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.4.attn.qkv.weight - torch.Size([1536, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.4.attn.qkv.bias - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.4.attn.proj.weight - torch.Size([512, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.4.attn.proj.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.4.norm2.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.4.norm2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.4.mlp.fc1.weight - torch.Size([2048, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.4.mlp.fc1.bias - torch.Size([2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.4.mlp.fc2.weight - torch.Size([512, 2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.4.mlp.fc2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.5.norm1.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.5.norm1.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.5.attn.relative_position_bias_table - torch.Size([529, 16]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.5.attn.qkv.weight - torch.Size([1536, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.5.attn.qkv.bias - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.5.attn.proj.weight - torch.Size([512, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.5.attn.proj.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.5.norm2.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.5.norm2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.5.mlp.fc1.weight - torch.Size([2048, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.5.mlp.fc1.bias - torch.Size([2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.5.mlp.fc2.weight - torch.Size([512, 2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.5.mlp.fc2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.6.norm1.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.6.norm1.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.6.attn.relative_position_bias_table - torch.Size([529, 16]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.6.attn.qkv.weight - torch.Size([1536, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.6.attn.qkv.bias - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.6.attn.proj.weight - torch.Size([512, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.6.attn.proj.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.6.norm2.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.6.norm2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.6.mlp.fc1.weight - torch.Size([2048, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.6.mlp.fc1.bias - torch.Size([2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.6.mlp.fc2.weight - torch.Size([512, 2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.6.mlp.fc2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.7.norm1.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.7.norm1.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.7.attn.relative_position_bias_table - torch.Size([529, 16]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.7.attn.qkv.weight - torch.Size([1536, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.7.attn.qkv.bias - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.7.attn.proj.weight - torch.Size([512, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.7.attn.proj.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.7.norm2.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.7.norm2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.7.mlp.fc1.weight - torch.Size([2048, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.7.mlp.fc1.bias - torch.Size([2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.7.mlp.fc2.weight - torch.Size([512, 2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.7.mlp.fc2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.8.norm1.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.8.norm1.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.8.attn.relative_position_bias_table - torch.Size([529, 16]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.8.attn.qkv.weight - torch.Size([1536, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.8.attn.qkv.bias - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.8.attn.proj.weight - torch.Size([512, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.8.attn.proj.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.8.norm2.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.8.norm2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.8.mlp.fc1.weight - torch.Size([2048, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.8.mlp.fc1.bias - torch.Size([2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.8.mlp.fc2.weight - torch.Size([512, 2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.8.mlp.fc2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.9.norm1.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.9.norm1.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.9.attn.relative_position_bias_table - torch.Size([529, 16]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.9.attn.qkv.weight - torch.Size([1536, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.9.attn.qkv.bias - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.9.attn.proj.weight - torch.Size([512, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.9.attn.proj.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.9.norm2.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.9.norm2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.9.mlp.fc1.weight - torch.Size([2048, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.9.mlp.fc1.bias - torch.Size([2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.9.mlp.fc2.weight - torch.Size([512, 2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.9.mlp.fc2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.10.norm1.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.10.norm1.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.10.attn.relative_position_bias_table - torch.Size([529, 16]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.10.attn.qkv.weight - torch.Size([1536, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.10.attn.qkv.bias - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.10.attn.proj.weight - torch.Size([512, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.10.attn.proj.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.10.norm2.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.10.norm2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.10.mlp.fc1.weight - torch.Size([2048, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.10.mlp.fc1.bias - torch.Size([2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.10.mlp.fc2.weight - torch.Size([512, 2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.10.mlp.fc2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.11.norm1.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.11.norm1.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.11.attn.relative_position_bias_table - torch.Size([529, 16]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.11.attn.qkv.weight - torch.Size([1536, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.11.attn.qkv.bias - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.11.attn.proj.weight - torch.Size([512, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.11.attn.proj.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.11.norm2.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.11.norm2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.11.mlp.fc1.weight - torch.Size([2048, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.11.mlp.fc1.bias - torch.Size([2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.11.mlp.fc2.weight - torch.Size([512, 2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.11.mlp.fc2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.12.norm1.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.12.norm1.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.12.attn.relative_position_bias_table - torch.Size([529, 16]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.12.attn.qkv.weight - torch.Size([1536, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.12.attn.qkv.bias - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.12.attn.proj.weight - torch.Size([512, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.12.attn.proj.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.12.norm2.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.12.norm2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.12.mlp.fc1.weight - torch.Size([2048, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.12.mlp.fc1.bias - torch.Size([2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.12.mlp.fc2.weight - torch.Size([512, 2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.12.mlp.fc2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.13.norm1.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.13.norm1.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.13.attn.relative_position_bias_table - torch.Size([529, 16]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.13.attn.qkv.weight - torch.Size([1536, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.13.attn.qkv.bias - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.13.attn.proj.weight - torch.Size([512, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.13.attn.proj.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.13.norm2.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.13.norm2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.13.mlp.fc1.weight - torch.Size([2048, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.13.mlp.fc1.bias - torch.Size([2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.13.mlp.fc2.weight - torch.Size([512, 2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.13.mlp.fc2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.14.norm1.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.14.norm1.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.14.attn.relative_position_bias_table - torch.Size([529, 16]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.14.attn.qkv.weight - torch.Size([1536, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.14.attn.qkv.bias - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.14.attn.proj.weight - torch.Size([512, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.14.attn.proj.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.14.norm2.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.14.norm2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.14.mlp.fc1.weight - torch.Size([2048, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.14.mlp.fc1.bias - torch.Size([2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.14.mlp.fc2.weight - torch.Size([512, 2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.14.mlp.fc2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.15.norm1.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.15.norm1.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.15.attn.relative_position_bias_table - torch.Size([529, 16]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.15.attn.qkv.weight - torch.Size([1536, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.15.attn.qkv.bias - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.15.attn.proj.weight - torch.Size([512, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.15.attn.proj.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.15.norm2.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.15.norm2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.15.mlp.fc1.weight - torch.Size([2048, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.15.mlp.fc1.bias - torch.Size([2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.15.mlp.fc2.weight - torch.Size([512, 2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.15.mlp.fc2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.16.norm1.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.16.norm1.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.16.attn.relative_position_bias_table - torch.Size([529, 16]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.16.attn.qkv.weight - torch.Size([1536, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.16.attn.qkv.bias - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.16.attn.proj.weight - torch.Size([512, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.16.attn.proj.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.16.norm2.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.16.norm2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.16.mlp.fc1.weight - torch.Size([2048, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.16.mlp.fc1.bias - torch.Size([2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.16.mlp.fc2.weight - torch.Size([512, 2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.16.mlp.fc2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.17.norm1.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.17.norm1.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.17.attn.relative_position_bias_table - torch.Size([529, 16]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.17.attn.qkv.weight - torch.Size([1536, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.17.attn.qkv.bias - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.17.attn.proj.weight - torch.Size([512, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.17.attn.proj.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.17.norm2.weight - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.17.norm2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.17.mlp.fc1.weight - torch.Size([2048, 512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.17.mlp.fc1.bias - torch.Size([2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.17.mlp.fc2.weight - torch.Size([512, 2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.blocks.17.mlp.fc2.bias - torch.Size([512]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.downsample.reduction.weight - torch.Size([1024, 2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.downsample.norm.weight - torch.Size([2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.2.downsample.norm.bias - torch.Size([2048]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.0.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.0.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.0.attn.relative_position_bias_table - torch.Size([529, 32]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.0.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.0.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.0.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.0.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.0.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.0.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.0.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.0.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.0.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.0.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.1.norm1.weight - torch.Size([1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.1.norm1.bias - torch.Size([1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.1.attn.relative_position_bias_table - torch.Size([529, 32]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.1.attn.qkv.weight - torch.Size([3072, 1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.1.attn.qkv.bias - torch.Size([3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.1.attn.proj.weight - torch.Size([1024, 1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.1.attn.proj.bias - torch.Size([1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.1.norm2.weight - torch.Size([1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.1.norm2.bias - torch.Size([1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.1.mlp.fc1.weight - torch.Size([4096, 1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.1.mlp.fc1.bias - torch.Size([4096]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.1.mlp.fc2.weight - torch.Size([1024, 4096]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.layers.3.blocks.1.mlp.fc2.bias - torch.Size([1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.norm.weight - torch.Size([1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder.norm.bias - torch.Size([1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.embeddings.word_embeddings.weight - torch.Size([30522, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.embeddings.position_embeddings.weight - torch.Size([512, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.embeddings.token_type_embeddings.weight - torch.Size([2, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.embeddings.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.embeddings.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.0.attention.self.query.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.0.attention.self.query.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.0.attention.self.key.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.0.attention.self.key.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.0.attention.self.value.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.0.attention.self.value.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.0.attention.output.dense.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.0.attention.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.0.attention.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.0.attention.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.0.intermediate.dense.weight - torch.Size([3072, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.0.intermediate.dense.bias - torch.Size([3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.0.output.dense.weight - torch.Size([768, 3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.0.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.0.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.0.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.1.attention.self.query.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.1.attention.self.query.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.1.attention.self.key.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.1.attention.self.key.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.1.attention.self.value.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.1.attention.self.value.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.1.attention.output.dense.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.1.attention.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.1.attention.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.1.attention.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.1.intermediate.dense.weight - torch.Size([3072, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.1.intermediate.dense.bias - torch.Size([3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.1.output.dense.weight - torch.Size([768, 3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.1.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.1.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.1.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.2.attention.self.query.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.2.attention.self.query.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.2.attention.self.key.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.2.attention.self.key.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.2.attention.self.value.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.2.attention.self.value.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.2.attention.output.dense.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.2.attention.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.2.attention.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.2.attention.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.2.intermediate.dense.weight - torch.Size([3072, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.2.intermediate.dense.bias - torch.Size([3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.2.output.dense.weight - torch.Size([768, 3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.2.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.2.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.2.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.3.attention.self.query.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.3.attention.self.query.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.3.attention.self.key.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.3.attention.self.key.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.3.attention.self.value.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.3.attention.self.value.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.3.attention.output.dense.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.3.attention.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.3.attention.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.3.attention.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.3.intermediate.dense.weight - torch.Size([3072, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.3.intermediate.dense.bias - torch.Size([3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.3.output.dense.weight - torch.Size([768, 3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.3.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.3.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.3.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.4.attention.self.query.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.4.attention.self.query.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.4.attention.self.key.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.4.attention.self.key.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.4.attention.self.value.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.4.attention.self.value.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.4.attention.output.dense.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.4.attention.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.4.attention.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.4.attention.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.4.intermediate.dense.weight - torch.Size([3072, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.4.intermediate.dense.bias - torch.Size([3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.4.output.dense.weight - torch.Size([768, 3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.4.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.4.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.4.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.5.attention.self.query.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.5.attention.self.query.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.5.attention.self.key.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.5.attention.self.key.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.5.attention.self.value.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.5.attention.self.value.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.5.attention.output.dense.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.5.attention.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.5.attention.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.5.attention.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.5.intermediate.dense.weight - torch.Size([3072, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.5.intermediate.dense.bias - torch.Size([3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.5.output.dense.weight - torch.Size([768, 3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.5.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.5.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.5.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.attention.self.query.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.attention.self.query.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.attention.self.key.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.attention.self.key.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.attention.self.value.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.attention.self.value.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.attention.output.dense.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.attention.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.attention.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.attention.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.crossattention.self.query.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.crossattention.self.query.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.crossattention.self.key.weight - torch.Size([768, 1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.crossattention.self.key.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.crossattention.self.value.weight - torch.Size([768, 1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.crossattention.self.value.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.crossattention.output.dense.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.crossattention.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.crossattention.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.crossattention.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.intermediate.dense.weight - torch.Size([3072, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.intermediate.dense.bias - torch.Size([3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.output.dense.weight - torch.Size([768, 3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.6.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.attention.self.query.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.attention.self.query.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.attention.self.key.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.attention.self.key.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.attention.self.value.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.attention.self.value.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.attention.output.dense.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.attention.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.attention.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.attention.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.crossattention.self.query.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.crossattention.self.query.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.crossattention.self.key.weight - torch.Size([768, 1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.crossattention.self.key.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.crossattention.self.value.weight - torch.Size([768, 1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.crossattention.self.value.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.crossattention.output.dense.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.crossattention.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.crossattention.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.crossattention.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.intermediate.dense.weight - torch.Size([3072, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.intermediate.dense.bias - torch.Size([3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.output.dense.weight - torch.Size([768, 3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.7.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.attention.self.query.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.attention.self.query.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.attention.self.key.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.attention.self.key.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.attention.self.value.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.attention.self.value.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.attention.output.dense.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.attention.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.attention.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.attention.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.crossattention.self.query.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.crossattention.self.query.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.crossattention.self.key.weight - torch.Size([768, 1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.crossattention.self.key.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.crossattention.self.value.weight - torch.Size([768, 1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.crossattention.self.value.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.crossattention.output.dense.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.crossattention.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.crossattention.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.crossattention.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.intermediate.dense.weight - torch.Size([3072, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.intermediate.dense.bias - torch.Size([3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.output.dense.weight - torch.Size([768, 3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.8.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.attention.self.query.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.attention.self.query.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.attention.self.key.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.attention.self.key.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.attention.self.value.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.attention.self.value.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.attention.output.dense.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.attention.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.attention.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.attention.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.crossattention.self.query.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.crossattention.self.query.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.crossattention.self.key.weight - torch.Size([768, 1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.crossattention.self.key.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.crossattention.self.value.weight - torch.Size([768, 1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.crossattention.self.value.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.crossattention.output.dense.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.crossattention.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.crossattention.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.crossattention.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.intermediate.dense.weight - torch.Size([3072, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.intermediate.dense.bias - torch.Size([3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.output.dense.weight - torch.Size([768, 3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.9.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.attention.self.query.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.attention.self.query.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.attention.self.key.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.attention.self.key.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.attention.self.value.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.attention.self.value.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.attention.output.dense.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.attention.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.attention.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.attention.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.crossattention.self.query.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.crossattention.self.query.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.crossattention.self.key.weight - torch.Size([768, 1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.crossattention.self.key.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.crossattention.self.value.weight - torch.Size([768, 1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.crossattention.self.value.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.crossattention.output.dense.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.crossattention.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.crossattention.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.crossattention.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.intermediate.dense.weight - torch.Size([3072, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.intermediate.dense.bias - torch.Size([3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.output.dense.weight - torch.Size([768, 3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.10.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.attention.self.query.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.attention.self.query.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.attention.self.key.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.attention.self.key.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.attention.self.value.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.attention.self.value.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.attention.output.dense.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.attention.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.attention.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.attention.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.crossattention.self.query.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.crossattention.self.query.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.crossattention.self.key.weight - torch.Size([768, 1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.crossattention.self.key.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.crossattention.self.value.weight - torch.Size([768, 1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.crossattention.self.value.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.crossattention.output.dense.weight - torch.Size([768, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.crossattention.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.crossattention.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.crossattention.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.intermediate.dense.weight - torch.Size([3072, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.intermediate.dense.bias - torch.Size([3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.output.dense.weight - torch.Size([768, 3072]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.output.dense.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.output.LayerNorm.weight - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_encoder.encoder.layer.11.output.LayerNorm.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_proj.weight - torch.Size([256, 1024]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_proj.bias - torch.Size([256]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_proj.weight - torch.Size([256, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

text_proj.bias - torch.Size([256]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

itm_head.fc.0.weight - torch.Size([1536, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

itm_head.fc.0.bias - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

itm_head.fc.1.weight - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

itm_head.fc.1.bias - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

itm_head.fc.3.weight - torch.Size([2, 1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

itm_head.fc.3.bias - torch.Size([2]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

bbox_head.fc.0.weight - torch.Size([1536, 768]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

bbox_head.fc.0.bias - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

bbox_head.fc.1.weight - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

bbox_head.fc.1.bias - torch.Size([1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

bbox_head.fc.3.weight - torch.Size([4, 1536]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

bbox_head.fc.3.bias - torch.Size([4]): 
PretrainedInit: load from pretrain/16m_base_model_state_step_199999_(xvlm2mmcv).pth 

vision_encoder_m.patch_embed.proj.weight - torch.Size([128, 3, 4, 4]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.patch_embed.proj.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.patch_embed.norm.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.patch_embed.norm.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.0.norm1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.0.norm1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.0.attn.relative_position_bias_table - torch.Size([529, 4]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.0.attn.qkv.weight - torch.Size([384, 128]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.0.attn.qkv.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.0.attn.proj.weight - torch.Size([128, 128]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.0.attn.proj.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.0.norm2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.0.norm2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.0.mlp.fc1.weight - torch.Size([512, 128]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.0.mlp.fc1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.0.mlp.fc2.weight - torch.Size([128, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.0.mlp.fc2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.1.norm1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.1.norm1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.1.attn.relative_position_bias_table - torch.Size([529, 4]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.1.attn.qkv.weight - torch.Size([384, 128]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.1.attn.qkv.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.1.attn.proj.weight - torch.Size([128, 128]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.1.attn.proj.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.1.norm2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.1.norm2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.1.mlp.fc1.weight - torch.Size([512, 128]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.1.mlp.fc1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.1.mlp.fc2.weight - torch.Size([128, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.blocks.1.mlp.fc2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.downsample.reduction.weight - torch.Size([256, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.downsample.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.0.downsample.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.0.norm1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.0.norm1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.0.attn.relative_position_bias_table - torch.Size([529, 8]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.0.attn.qkv.weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.0.attn.qkv.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.0.attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.0.attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.0.norm2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.0.norm2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.0.mlp.fc1.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.0.mlp.fc1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.0.mlp.fc2.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.0.mlp.fc2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.1.norm1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.1.norm1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.1.attn.relative_position_bias_table - torch.Size([529, 8]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.1.attn.qkv.weight - torch.Size([768, 256]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.1.attn.qkv.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.1.attn.proj.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.1.attn.proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.1.norm2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.1.norm2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.1.mlp.fc1.weight - torch.Size([1024, 256]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.1.mlp.fc1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.1.mlp.fc2.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.blocks.1.mlp.fc2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.downsample.reduction.weight - torch.Size([512, 1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.downsample.norm.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.1.downsample.norm.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.0.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.0.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.0.attn.relative_position_bias_table - torch.Size([529, 16]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.0.attn.qkv.weight - torch.Size([1536, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.0.attn.qkv.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.0.attn.proj.weight - torch.Size([512, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.0.attn.proj.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.0.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.0.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.0.mlp.fc1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.0.mlp.fc1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.0.mlp.fc2.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.0.mlp.fc2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.1.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.1.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.1.attn.relative_position_bias_table - torch.Size([529, 16]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.1.attn.qkv.weight - torch.Size([1536, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.1.attn.qkv.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.1.attn.proj.weight - torch.Size([512, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.1.attn.proj.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.1.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.1.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.1.mlp.fc1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.1.mlp.fc1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.1.mlp.fc2.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.1.mlp.fc2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.2.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.2.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.2.attn.relative_position_bias_table - torch.Size([529, 16]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.2.attn.qkv.weight - torch.Size([1536, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.2.attn.qkv.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.2.attn.proj.weight - torch.Size([512, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.2.attn.proj.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.2.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.2.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.2.mlp.fc1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.2.mlp.fc1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.2.mlp.fc2.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.2.mlp.fc2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.3.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.3.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.3.attn.relative_position_bias_table - torch.Size([529, 16]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.3.attn.qkv.weight - torch.Size([1536, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.3.attn.qkv.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.3.attn.proj.weight - torch.Size([512, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.3.attn.proj.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.3.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.3.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.3.mlp.fc1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.3.mlp.fc1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.3.mlp.fc2.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.3.mlp.fc2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.4.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.4.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.4.attn.relative_position_bias_table - torch.Size([529, 16]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.4.attn.qkv.weight - torch.Size([1536, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.4.attn.qkv.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.4.attn.proj.weight - torch.Size([512, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.4.attn.proj.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.4.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.4.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.4.mlp.fc1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.4.mlp.fc1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.4.mlp.fc2.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.4.mlp.fc2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.5.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.5.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.5.attn.relative_position_bias_table - torch.Size([529, 16]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.5.attn.qkv.weight - torch.Size([1536, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.5.attn.qkv.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.5.attn.proj.weight - torch.Size([512, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.5.attn.proj.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.5.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.5.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.5.mlp.fc1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.5.mlp.fc1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.5.mlp.fc2.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.5.mlp.fc2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.6.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.6.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.6.attn.relative_position_bias_table - torch.Size([529, 16]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.6.attn.qkv.weight - torch.Size([1536, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.6.attn.qkv.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.6.attn.proj.weight - torch.Size([512, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.6.attn.proj.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.6.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.6.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.6.mlp.fc1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.6.mlp.fc1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.6.mlp.fc2.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.6.mlp.fc2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.7.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.7.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.7.attn.relative_position_bias_table - torch.Size([529, 16]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.7.attn.qkv.weight - torch.Size([1536, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.7.attn.qkv.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.7.attn.proj.weight - torch.Size([512, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.7.attn.proj.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.7.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.7.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.7.mlp.fc1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.7.mlp.fc1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.7.mlp.fc2.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.7.mlp.fc2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.8.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.8.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.8.attn.relative_position_bias_table - torch.Size([529, 16]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.8.attn.qkv.weight - torch.Size([1536, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.8.attn.qkv.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.8.attn.proj.weight - torch.Size([512, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.8.attn.proj.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.8.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.8.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.8.mlp.fc1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.8.mlp.fc1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.8.mlp.fc2.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.8.mlp.fc2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.9.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.9.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.9.attn.relative_position_bias_table - torch.Size([529, 16]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.9.attn.qkv.weight - torch.Size([1536, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.9.attn.qkv.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.9.attn.proj.weight - torch.Size([512, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.9.attn.proj.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.9.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.9.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.9.mlp.fc1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.9.mlp.fc1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.9.mlp.fc2.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.9.mlp.fc2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.10.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.10.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.10.attn.relative_position_bias_table - torch.Size([529, 16]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.10.attn.qkv.weight - torch.Size([1536, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.10.attn.qkv.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.10.attn.proj.weight - torch.Size([512, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.10.attn.proj.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.10.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.10.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.10.mlp.fc1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.10.mlp.fc1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.10.mlp.fc2.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.10.mlp.fc2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.11.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.11.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.11.attn.relative_position_bias_table - torch.Size([529, 16]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.11.attn.qkv.weight - torch.Size([1536, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.11.attn.qkv.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.11.attn.proj.weight - torch.Size([512, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.11.attn.proj.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.11.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.11.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.11.mlp.fc1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.11.mlp.fc1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.11.mlp.fc2.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.11.mlp.fc2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.12.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.12.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.12.attn.relative_position_bias_table - torch.Size([529, 16]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.12.attn.qkv.weight - torch.Size([1536, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.12.attn.qkv.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.12.attn.proj.weight - torch.Size([512, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.12.attn.proj.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.12.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.12.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.12.mlp.fc1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.12.mlp.fc1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.12.mlp.fc2.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.12.mlp.fc2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.13.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.13.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.13.attn.relative_position_bias_table - torch.Size([529, 16]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.13.attn.qkv.weight - torch.Size([1536, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.13.attn.qkv.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.13.attn.proj.weight - torch.Size([512, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.13.attn.proj.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.13.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.13.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.13.mlp.fc1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.13.mlp.fc1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.13.mlp.fc2.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.13.mlp.fc2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.14.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.14.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.14.attn.relative_position_bias_table - torch.Size([529, 16]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.14.attn.qkv.weight - torch.Size([1536, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.14.attn.qkv.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.14.attn.proj.weight - torch.Size([512, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.14.attn.proj.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.14.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.14.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.14.mlp.fc1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.14.mlp.fc1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.14.mlp.fc2.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.14.mlp.fc2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.15.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.15.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.15.attn.relative_position_bias_table - torch.Size([529, 16]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.15.attn.qkv.weight - torch.Size([1536, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.15.attn.qkv.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.15.attn.proj.weight - torch.Size([512, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.15.attn.proj.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.15.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.15.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.15.mlp.fc1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.15.mlp.fc1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.15.mlp.fc2.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.15.mlp.fc2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.16.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.16.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.16.attn.relative_position_bias_table - torch.Size([529, 16]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.16.attn.qkv.weight - torch.Size([1536, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.16.attn.qkv.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.16.attn.proj.weight - torch.Size([512, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.16.attn.proj.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.16.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.16.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.16.mlp.fc1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.16.mlp.fc1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.16.mlp.fc2.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.16.mlp.fc2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.17.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.17.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.17.attn.relative_position_bias_table - torch.Size([529, 16]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.17.attn.qkv.weight - torch.Size([1536, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.17.attn.qkv.bias - torch.Size([1536]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.17.attn.proj.weight - torch.Size([512, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.17.attn.proj.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.17.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.17.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.17.mlp.fc1.weight - torch.Size([2048, 512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.17.mlp.fc1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.17.mlp.fc2.weight - torch.Size([512, 2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.blocks.17.mlp.fc2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.downsample.reduction.weight - torch.Size([1024, 2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.downsample.norm.weight - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.2.downsample.norm.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.0.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.0.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.0.attn.relative_position_bias_table - torch.Size([529, 32]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.0.attn.qkv.weight - torch.Size([3072, 1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.0.attn.qkv.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.0.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.0.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.0.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.0.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.0.mlp.fc1.weight - torch.Size([4096, 1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.0.mlp.fc1.bias - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.0.mlp.fc2.weight - torch.Size([1024, 4096]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.0.mlp.fc2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.1.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.1.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.1.attn.relative_position_bias_table - torch.Size([529, 32]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.1.attn.qkv.weight - torch.Size([3072, 1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.1.attn.qkv.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.1.attn.proj.weight - torch.Size([1024, 1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.1.attn.proj.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.1.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.1.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.1.mlp.fc1.weight - torch.Size([4096, 1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.1.mlp.fc1.bias - torch.Size([4096]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.1.mlp.fc2.weight - torch.Size([1024, 4096]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.layers.3.blocks.1.mlp.fc2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.norm.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_encoder_m.norm.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.embeddings.word_embeddings.weight - torch.Size([30522, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.embeddings.position_embeddings.weight - torch.Size([512, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.embeddings.token_type_embeddings.weight - torch.Size([2, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.embeddings.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.embeddings.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.0.attention.self.query.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.0.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.0.attention.self.key.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.0.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.0.attention.self.value.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.0.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.0.attention.output.dense.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.0.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.0.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.0.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.0.intermediate.dense.weight - torch.Size([3072, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.0.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.0.output.dense.weight - torch.Size([768, 3072]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.0.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.0.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.0.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.1.attention.self.query.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.1.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.1.attention.self.key.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.1.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.1.attention.self.value.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.1.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.1.attention.output.dense.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.1.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.1.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.1.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.1.intermediate.dense.weight - torch.Size([3072, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.1.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.1.output.dense.weight - torch.Size([768, 3072]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.1.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.1.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.1.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.2.attention.self.query.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.2.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.2.attention.self.key.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.2.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.2.attention.self.value.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.2.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.2.attention.output.dense.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.2.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.2.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.2.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.2.intermediate.dense.weight - torch.Size([3072, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.2.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.2.output.dense.weight - torch.Size([768, 3072]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.2.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.2.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.2.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.3.attention.self.query.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.3.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.3.attention.self.key.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.3.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.3.attention.self.value.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.3.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.3.attention.output.dense.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.3.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.3.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.3.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.3.intermediate.dense.weight - torch.Size([3072, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.3.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.3.output.dense.weight - torch.Size([768, 3072]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.3.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.3.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.3.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.4.attention.self.query.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.4.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.4.attention.self.key.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.4.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.4.attention.self.value.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.4.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.4.attention.output.dense.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.4.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.4.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.4.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.4.intermediate.dense.weight - torch.Size([3072, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.4.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.4.output.dense.weight - torch.Size([768, 3072]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.4.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.4.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.4.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.5.attention.self.query.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.5.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.5.attention.self.key.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.5.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.5.attention.self.value.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.5.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.5.attention.output.dense.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.5.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.5.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.5.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.5.intermediate.dense.weight - torch.Size([3072, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.5.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.5.output.dense.weight - torch.Size([768, 3072]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.5.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.5.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.5.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.6.attention.self.query.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.6.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.6.attention.self.key.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.6.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.6.attention.self.value.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.6.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.6.attention.output.dense.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.6.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.6.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.6.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.6.crossattention.self.query.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.6.crossattention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.6.crossattention.self.key.weight - torch.Size([768, 1024]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.6.crossattention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.6.crossattention.self.value.weight - torch.Size([768, 1024]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.6.crossattention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.6.crossattention.output.dense.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.6.crossattention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.6.crossattention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.6.crossattention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.6.intermediate.dense.weight - torch.Size([3072, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.6.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.6.output.dense.weight - torch.Size([768, 3072]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.6.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.6.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.6.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.7.attention.self.query.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.7.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.7.attention.self.key.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.7.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.7.attention.self.value.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.7.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.7.attention.output.dense.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.7.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.7.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.7.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.7.crossattention.self.query.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.7.crossattention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.7.crossattention.self.key.weight - torch.Size([768, 1024]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.7.crossattention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.7.crossattention.self.value.weight - torch.Size([768, 1024]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.7.crossattention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.7.crossattention.output.dense.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.7.crossattention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.7.crossattention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.7.crossattention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.7.intermediate.dense.weight - torch.Size([3072, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.7.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.7.output.dense.weight - torch.Size([768, 3072]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.7.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.7.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.7.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.8.attention.self.query.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.8.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.8.attention.self.key.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.8.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.8.attention.self.value.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.8.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.8.attention.output.dense.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.8.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.8.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.8.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.8.crossattention.self.query.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.8.crossattention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.8.crossattention.self.key.weight - torch.Size([768, 1024]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.8.crossattention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.8.crossattention.self.value.weight - torch.Size([768, 1024]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.8.crossattention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.8.crossattention.output.dense.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.8.crossattention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.8.crossattention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.8.crossattention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.8.intermediate.dense.weight - torch.Size([3072, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.8.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.8.output.dense.weight - torch.Size([768, 3072]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.8.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.8.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.8.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.9.attention.self.query.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.9.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.9.attention.self.key.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.9.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.9.attention.self.value.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.9.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.9.attention.output.dense.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.9.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.9.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.9.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.9.crossattention.self.query.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.9.crossattention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.9.crossattention.self.key.weight - torch.Size([768, 1024]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.9.crossattention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.9.crossattention.self.value.weight - torch.Size([768, 1024]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.9.crossattention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.9.crossattention.output.dense.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.9.crossattention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.9.crossattention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.9.crossattention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.9.intermediate.dense.weight - torch.Size([3072, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.9.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.9.output.dense.weight - torch.Size([768, 3072]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.9.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.9.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.9.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.10.attention.self.query.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.10.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.10.attention.self.key.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.10.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.10.attention.self.value.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.10.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.10.attention.output.dense.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.10.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.10.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.10.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.10.crossattention.self.query.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.10.crossattention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.10.crossattention.self.key.weight - torch.Size([768, 1024]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.10.crossattention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.10.crossattention.self.value.weight - torch.Size([768, 1024]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.10.crossattention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.10.crossattention.output.dense.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.10.crossattention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.10.crossattention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.10.crossattention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.10.intermediate.dense.weight - torch.Size([3072, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.10.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.10.output.dense.weight - torch.Size([768, 3072]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.10.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.10.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.10.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.11.attention.self.query.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.11.attention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.11.attention.self.key.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.11.attention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.11.attention.self.value.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.11.attention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.11.attention.output.dense.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.11.attention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.11.attention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.11.attention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.11.crossattention.self.query.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.11.crossattention.self.query.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.11.crossattention.self.key.weight - torch.Size([768, 1024]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.11.crossattention.self.key.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.11.crossattention.self.value.weight - torch.Size([768, 1024]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.11.crossattention.self.value.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.11.crossattention.output.dense.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.11.crossattention.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.11.crossattention.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.11.crossattention.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.11.intermediate.dense.weight - torch.Size([3072, 768]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.11.intermediate.dense.bias - torch.Size([3072]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.11.output.dense.weight - torch.Size([768, 3072]): 
Initialized by user-defined `init_weights` in XVLM_XBert  

text_encoder_m.encoder.layer.11.output.dense.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.11.output.LayerNorm.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_encoder_m.encoder.layer.11.output.LayerNorm.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_proj_m.weight - torch.Size([256, 1024]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

vision_proj_m.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_proj_m.weight - torch.Size([256, 768]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  

text_proj_m.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of XVLMRetrieval_hccm  
2025/08/28 13:38:25 - mmengine - INFO - Enabling the "activation_checkpointing" feature for sub-modules: ['vision_encoder.layers.1', 'vision_encoder.layers.2', 'vision_encoder.layers.3', 'text_encoder.encoder.layer.1', 'text_encoder.encoder.layer.2', 'text_encoder.encoder.layer.3', 'text_encoder.encoder.layer.4', 'text_encoder.encoder.layer.5', 'text_encoder.encoder.layer.6', 'text_encoder.encoder.layer.7', 'text_encoder.encoder.layer.8', 'text_encoder.encoder.layer.9', 'text_encoder.encoder.layer.10', 'text_encoder.encoder.layer.11']
2025/08/28 13:38:25 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2025/08/28 13:38:25 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2025/08/28 13:38:25 - mmengine - INFO - Checkpoints will be saved to /home/rh/Files/MS/HCCM/work_dirs/xvlm_1xb24_hccm.
